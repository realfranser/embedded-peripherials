00000000                                     1      ORG $0
00000000  00008000                           2      DC.L $8000 * Valor inicial del puntero de pila
00000004                                     3      *DC.L PPAL * Programa principal
00000004  0000583C                           4      DC.L INICIO * Direccion RTI de la interrupcion Reset, etiqueta del programa ppal
00000008                                     5  
00000400                                     6      ORG $400
00000400                                     7  
00000400                                     8  * Almacen de buffers
00000400                                     9  
00000400  =000007D1                         10  SIZE EQU 2001                   * Size de los buffers
00000400                                    11  
00000400  00000000 00000000 00000000 ...    12      BUFF_V:     DC.L    0,0,0,0     * Punteros a los buffers
00000410                                    13  
00000410                                    14  * extraccion, insercion, pos inicial, pos final 
00000410  00000000 00000000 00000000 ...    15      BUFF_0:     DC.L    0,0,0,0     * Buffer 0 -> Recepcion A
00000420                                    16                  DS.B    SIZE
00000BF1                                    17  
00000BF2  00000000 00000000 00000000 ...    18      BUFF_1:     DC.L    0,0,0,0     * Buffer 1 -> Recepcion B
00000C02                                    19                  DS.B    SIZE
000013D3                                    20  
000013D4  00000000 00000000 00000000 ...    21      BUFF_2:     DC.L    0,0,0,0     * Buffer 2 -> Transmision A
000013E4                                    22                  DS.B    SIZE
00001BB5                                    23  
00001BB6  00000000 00000000 00000000 ...    24      BUFF_3:     DC.L    0,0,0,0     * Buffer 3 -> Transmision B
00001BC6                                    25                  DS.B    SIZE
00002397                                    26  
00002397                                    27      IMRCOPY:    DS.B    1            * Copia de IMR ya que no puede ser leido
00002398                                    28  
00002398                                    29  * Registros de la DUART MC68681
00002398                                    30  
00002398  =00EFFC01                         31  MR1A	EQU		$EFFC01
00002398  =00EFFC01                         32  MR2A	EQU		$EFFC01
00002398  =00EFFC03                         33  SRA		EQU		$EFFC03
00002398  =00EFFC03                         34  CSRA	EQU		$EFFC03
00002398  =00EFFC05                         35  CRA		EQU		$EFFC05
00002398  =00EFFC07                         36  TBA		EQU		$EFFC07
00002398  =00EFFC07                         37  RBA		EQU		$EFFC07
00002398                                    38  
00002398  =00EFFC09                         39  ACR		EQU		$EFFC09
00002398  =00EFFC0B                         40  IMR		EQU		$EFFC0B
00002398  =00EFFC0B                         41  ISR		EQU		$EFFC0B
00002398                                    42  
00002398  =00EFFC11                         43  MR1B	EQU		$EFFC11
00002398  =00EFFC11                         44  MR2B	EQU		$EFFC11
00002398  =00EFFC15                         45  CRB     EQU     $effc15
00002398  =00EFFC17                         46  TBB     EQU     $effc17
00002398  =00EFFC17                         47  RBB     EQU     $effc17
00002398                                    48  
00002398  =00EFFC13                         49  SRB     EQU     $effc13
00002398  =00EFFC13                         50  CSRB    EQU     $effc13
00002398  =00EFFC19                         51  IVR		EQU		$EFFC19
00002398                                    52  
00002398                                    53  
00002398                                    54  
00002398                                    55  
00002398                                    56  
00002398                                    57      
00002398                                    58      INIT:
00002398                                    59          * Preparación de periféricos
00002398  13FC 0010 00EFFC05                60                  MOVE.B    #%00010000,CRA        * Reinicia el puntero MR1
000023A0  13FC 0003 00EFFC01                61                  MOVE.B    #%00000011,MR1A       * 8 bits por caracter (interrumpe cada 8 bits)
000023A8  13FC 0000 00EFFC01                62                  MOVE.B    #%00000000,MR2A       * Eco desactivado
000023B0  13FC 00CC 00EFFC03                63                  MOVE.B    #%11001100,CSRA       * Velocidad = 38400 bps
000023B8                                    64  
000023B8  13FC 0010 00EFFC15                65                  MOVE.B    #%00010000,CRB        * Reinicia el puntero MR1
000023C0  13FC 0003 00EFFC11                66                  MOVE.B    #%00000011,MR1B       * 8 bits por caracter (interrumpe cada 8 bits)
000023C8  13FC 0000 00EFFC11                67                  MOVE.B    #%00000000,MR2B       * Eco desactivado
000023D0  13FC 00CC 00EFFC13                68                  MOVE.B    #%11001100,CSRB       * Velocidad = 38400 bps
000023D8                                    69  
000023D8  13FC 0000 00EFFC09                70                  MOVE.B    #%00000000,ACR        * Velocidad = 38400 bps
000023E0  13FC 0005 00EFFC05                71                  MOVE.B    #%00000101,CRA        * Transmision y recepcion activados
000023E8  13FC 0005 00EFFC15                72                  MOVE.B    #%00000101,CRB        * Transmision y recepcion activados
000023F0                                    73  
000023F0  11FC 0022 2397                    74                  MOVE.B    #%00100010,IMRCOPY    * Copiar IMR en nuestra propia variable
000023F6  13F8 2397 00EFFC0B                75                  MOVE.B    IMRCOPY,IMR
000023FE                                    76  
000023FE  13FC 0040 00EFFC19                77                  MOVE.B    #$40,IVR              * Vector de interrupcion = 64
00002406  21FC 0000269A 0100                78                  MOVE.L    #RTI,$100             * Decimal: 4*64 = 256 -> Hexa: 100
0000240E                                    79  
0000240E                                    80  
0000240E                                    81                  * Mis propios inits
0000240E                                    82  
0000240E  207C 00000400                     83                  MOVE.L    #BUFF_V,A0            * Vector de buffers 
00002414                                    84  
00002414  20BC 00000410                     85                  MOVE.L    #BUFF_0,(A0)          * Buffer recepcion A
0000241A  217C 00000BF2 0004                86                  MOVE.L    #BUFF_1,4(A0)         * Buffer recepcion B
00002422  217C 000013D4 0008                87                  MOVE.L    #BUFF_2,8(A0)         * Buffer transmision A
0000242A  217C 00001BB6 000C                88                  MOVE.L    #BUFF_3,12(A0)        * Buffer transmision B
00002432                                    89  
00002432                                    90                  * Inicializo todos los punteros de los buffers
00002432  207C 00000410                     91                  MOVE.L    #BUFF_0,A0            * Recepcion A
00002438  20BC 00000420                     92                  MOVE.L    #BUFF_0+16,(A0)
0000243E  217C 00000420 0004                93                  MOVE.L    #BUFF_0+16,4(A0)
00002446  217C 00000420 0008                94                  MOVE.L    #BUFF_0+16,8(A0)
0000244E  217C 00000BF1 000C                95                  MOVE.L    #BUFF_0+SIZE+16,12(A0)
00002456                                    96  
00002456  207C 00000BF2                     97                  MOVE.L    #BUFF_1,A0            * Recepcion B
0000245C  20BC 00000C02                     98                  MOVE.L    #BUFF_1+16,(A0)
00002462  217C 00000C02 0004                99                  MOVE.L    #BUFF_1+16,4(A0)
0000246A  217C 00000C02 0008               100                  MOVE.L    #BUFF_1+16,8(A0)
00002472  217C 000013D3 000C               101                  MOVE.L    #BUFF_1+SIZE+16,12(A0)
0000247A                                   102  
0000247A  207C 000013D4                    103                  MOVE.L    #BUFF_2,A0            * Transmision A
00002480  20BC 000013E4                    104                  MOVE.L    #BUFF_2+16,(A0)
00002486  217C 000013E4 0004               105                  MOVE.L    #BUFF_2+16,4(A0)
0000248E  217C 000013E4 0008               106                  MOVE.L    #BUFF_2+16,8(A0)
00002496  217C 00001BB5 000C               107                  MOVE.L    #BUFF_2+SIZE+16,12(A0)
0000249E                                   108  
0000249E  207C 00001BB6                    109                  MOVE.L    #BUFF_3,A0            * Transmision B
000024A4  20BC 00001BC6                    110                  MOVE.L    #BUFF_3+16,(A0)
000024AA  217C 00001BC6 0004               111                  MOVE.L    #BUFF_3+16,4(A0)
000024B2  217C 00001BC6 0008               112                  MOVE.L    #BUFF_3+16,8(A0)
000024BA  217C 00002397 000C               113                  MOVE.L    #BUFF_3+SIZE+16,12(A0)
000024C2                                   114  
000024C2                                   115  
000024C2  4E75                             116                  RTS
000024C4                                   117  
000024C4                                   118      *██╗     ███████╗███████╗ ██████╗ █████╗ ██████╗ *
000024C4                                   119    ***██║     ██╔════╝██╔════╝██╔════╝██╔══██╗██╔══██╗***
000024C4                                   120  *****██║     █████╗  █████╗  ██║     ███████║██████╔╝*****
000024C4                                   121  *****██║     ██╔══╝  ██╔══╝  ██║     ██╔══██║██╔══██╗*****
000024C4                                   122    ***███████╗███████╗███████╗╚██████╗██║  ██║██║  ██║***
000024C4                                   123      *╚══════╝╚══════╝╚══════╝ ╚═════╝╚═╝  ╚═╝╚═╝  ╚═╝*
000024C4                                   124  
000024C4  4E56 FFF4                        125      LEECAR:     LINK    A6,#-12         * Creacion del marco de pila y guardado de registros usados en leecar
000024C8  2D48 FFFC                        126                  MOVE.L  A0,-4(A6)
000024CC  2D49 FFF8                        127                  MOVE.L  A1,-8(A6)
000024D0  2D4A FFF4                        128                  MOVE.L  A2,-12(A6)
000024D4                                   129  
000024D4                                   130                  *** Seccion de parametros de entrada ***
000024D4  C0BC 00000003                    131                  AND.L   #$3,D0
000024DA  E580                             132                  ASL.L   #2,D0           * Get buffer seleccionado
000024DC  307C 0400                        133                  MOVE    #BUFF_V,A0      * Get vector de buffers
000024E0  2070 0000                        134                  MOVE.L  (A0,D0),A0      * Get buffer concreto
000024E4  2250                             135                  MOVE.L  (A0),A1         * Get puntero de extraccion en A1
000024E6  2468 0004                        136                  MOVE.L  4(A0),A2        * Get puntero de insericon en A2
000024EA                                   137  
000024EA                                   138                  *** Seccion lectura de caracter ***
000024EA  B180                             139                  EOR.L   D0,D0           * D0 = 0
000024EC  B5C9                             140                  CMP.L   A1,A2           * Si extraccion e insercion son iguales -> empty buffer
000024EE  6700 001C                        141                  BEQ     EMPTY
000024F2                                   142  
000024F2  1019                             143                  MOVE.B  (A1)+,D0        * Leo e incremento puntero
000024F4  B3E8 000C                        144                  CMP.L   12(A0),A1       * Si pos_final == p_extraccion -> final del buffer
000024F8  6700 0008                        145                  BEQ     E_RES
000024FC                                   146  
000024FC  2089                             147                  MOVE.L  A1,(A0)         * Actualizo puntero de extraccion
000024FE  6000 000E                        148                  BRA     LC_END
00002502                                   149  
00002502  2268 0008                        150      E_RES:      MOVE.L  8(A0),A1        * Extraccion reset
00002506  2089                             151                  MOVE.L  A1,(A0)
00002508  6000 0004                        152                  BRA     LC_END
0000250C                                   153  
0000250C                                   154                  *** Seccion return ***
0000250C  70FF                             155      EMPTY:      MOVE.L  #-1,D0          * Empty buffer
0000250E                                   156  
0000250E  246E FFF4                        157      LC_END:     MOVE.L  -12(A6),A2
00002512  226E FFF8                        158                  MOVE.L  -8(A6),A1
00002516  206E FFFC                        159                  MOVE.L  -4(A6),A0
0000251A  4E5E                             160                  UNLK    A6
0000251C  4E75                             161                  RTS
0000251E                                   162  
0000251E                                   163      *███████╗███████╗ ██████╗ ██████╗ █████╗ ██████╗ *
0000251E                                   164    ***██╔════╝██╔════╝██╔════╝██╔════╝██╔══██╗██╔══██╗***
0000251E                                   165  *****█████╗  ███████╗██║     ██║     ███████║██████╔╝*****
0000251E                                   166  *****██╔══╝  ╚════██║██║     ██║     ██╔══██║██╔══██╗*****
0000251E                                   167    ***███████╗███████║╚██████╗╚██████╗██║  ██║██║  ██║***
0000251E                                   168      *╚══════╝╚══════╝ ╚═════╝ ╚═════╝╚═╝  ╚═╝╚═╝  ╚═╝*
0000251E                                   169  
0000251E  4E56 FFF4                        170      ESCCAR:     LINK    A6,#-12         * Creacion del marco de pila y guardado de registros usados en esccar
00002522  2D48 FFFC                        171                  MOVE.L  A0,-4(A6)
00002526  2D49 FFF8                        172                  MOVE.L  A1,-8(A6)
0000252A  2D4A FFF4                        173                  MOVE.L  A2,-12(A6)
0000252E                                   174  
0000252E                                   175                  *** Seccion parametros de entrada ***
0000252E  C0BC 00000003                    176                  AND.L   #$3,D0
00002534  E580                             177                  ASL.L   #2,D0           * Get buffer seleccionado
00002536  307C 0400                        178                  MOVE    #BUFF_V,A0      * Get vector de buffers
0000253A  2070 0000                        179                  MOVE.L  (A0,D0),A0      * Get buffer concreto
0000253E  2250                             180                  MOVE.L  (A0),A1         * Get puntero de extraccion en A1
00002540  2468 0004                        181                  MOVE.L  4(A0),A2        * Get puntero de insercion en A2
00002544                                   182  
00002544                                   183                  *** Seccion escritura de caracter ***
00002544  14C1                             184                  MOVE.B  D1,(A2)+        * Insert caracter
00002546  B5E8 000C                        185                  CMP.L   12(A0),A2       * Si pos_final == p_insercion -> final del buffer
0000254A  6600 0006                        186                  BNE     N_RES           * Si no esta en el final del buffer, continua en N_RES
0000254E                                   187  
0000254E  2468 0008                        188                  MOVE.L  8(A0),A2        * Reset del p_insercion
00002552                                   189  
00002552  B5C9                             190      N_RES:      CMP.L   A1,A2           * Si extraccion == insercion -> buffer full
00002554  6700 000C                        191                  BEQ     FULL
00002558                                   192                  * No esta lleno
00002558  214A 0004                        193                  MOVE.L  A2,4(A0)
0000255C  7000                             194                  MOVE.L  #0,D0
0000255E  6000 0004                        195                  BRA     EC_END
00002562                                   196  
00002562                                   197                  *** Seccion return ***
00002562  70FF                             198      FULL:       MOVE.L  #-1,D0
00002564                                   199  
00002564  246E FFF4                        200      EC_END:     MOVE.L  -12(A6),A2
00002568  226E FFF8                        201                  MOVE.L  -8(A6),A1
0000256C  206E FFFC                        202                  MOVE.L  -4(A6),A0
00002570  4E5E                             203                  UNLK    A6
00002572  4E75                             204                  RTS
00002574                                   205  
00002574                                   206      *███████╗ ██████╗ █████╗ ███╗   ██╗*
00002574                                   207    ***██╔════╝██╔════╝██╔══██╗████╗  ██║***
00002574                                   208  *****███████╗██║     ███████║██╔██╗ ██║*****
00002574                                   209  *****╚════██║██║     ██╔══██║██║╚██╗██║*****
00002574                                   210    ***███████║╚██████╗██║  ██║██║ ╚████║***
00002574                                   211      *╚══════╝ ╚═════╝╚═╝  ╚═╝╚═╝  ╚═══╝*
00002574                                   212  
00002574  4E56 FFF0                        213      SCAN:       LINK    A6,#-16         * Los parametros de entrada estan 8B detras del puntero de pila
00002578  2D48 FFFC                        214                  MOVE.L  A0,-4(A6)
0000257C  2D41 FFF8                        215                  MOVE.L  D1,-8(A6)
00002580  2D42 FFF4                        216                  MOVE.L  D2,-12(A6)
00002584  2D43 FFF0                        217                  MOVE.L  D3,-16(A6)
00002588                                   218  
00002588                                   219                  *** Seccion parametros de entrada ***
00002588  206E 0008                        220                  MOVE.L  8(A6),A0        * A1 -> primer param (direccion del buffer destino)
0000258C                                   221  
0000258C  B180                             222                  EOR.L   D0,D0
0000258E  302E 000C                        223                  MOVE.W  12(A6),D0       * D0 -> segundo param (descriptor del dispositivo sobre el que se lee)
00002592                                   224  
00002592  B381                             225                  EOR.L   D1,D1
00002594  322E 000E                        226                  MOVE.W  14(A6),D1       * D1 -> tercer param (size, num max de caracteres a copiar)
00002598                                   227  
00002598  B582                             228                  EOR.L   D2,D2           * D2 -> retorno (contador de carcteres leidos)
0000259A                                   229  
0000259A                                   230                  ***Seccion de deteccion de errores***
0000259A  B27C 0000                        231                  CMP.W   #0,D1           * Si el size < 0 -> error (absurdo!)
0000259E  6D00 0034                        232                  BLT     SC_ERR
000025A2  B07C 0001                        233                  CMP.W   #1,D0           * Si el desc > 1 -> buffer desc incorrecto
000025A6  6E00 002C                        234                  BGT     SC_ERR
000025AA  B07C 0000                        235                  CMP.W   #0,D0           * Si el desc < 0 -> buffer desc incorrecto
000025AE  6D00 0024                        236                  BLT     SC_ERR
000025B2                                   237  
000025B2                                   238                  *** Seccion lectura del buffer ***
000025B2  B27C 0000                        239      SC_BUF:     CMP.W   #0,D1
000025B6  6700 0022                        240                  BEQ     SC_OK           * Comprobamos si se han leido todos los caracteres
000025BA  302E 000C                        241                  MOVE.W  12(A6),D0       * Reseteamos el desc. del dispositivo sobre el que leer
000025BE  6100 FF04                        242                  BSR     LEECAR
000025C2  B0BC FFFFFFFF                    243                  CMP.L   #-1,D0          * Si empty buffer -> se va al final
000025C8  6700 0010                        244                  BEQ     SC_OK
000025CC  10C0                             245                  MOVE.B  D0,(A0)+        * Copiamos el caracter devuelto por leecar en la pos del buffer pasada
000025CE  5341                             246                  SUB.W   #1,D1           * Size --
000025D0  5282                             247                  ADD.L   #1,D2           * Contador ++
000025D2  60DE                             248                  BRA     SC_BUF
000025D4                                   249  
000025D4                                   250                  *** Seccion return ***
000025D4  70FF                             251      SC_ERR:     MOVE.L  #-1,D0
000025D6  6000 0004                        252                  BRA     SC_END
000025DA                                   253  
000025DA  2002                             254      SC_OK:      MOVE.L  D2,D0
000025DC                                   255  
000025DC  262E FFF0                        256      SC_END:     MOVE.L  -16(A6),D3
000025E0  242E FFF4                        257                  MOVE.L  -12(A6),D2
000025E4  222E FFF8                        258                  MOVE.L  -8(A6),D1
000025E8  206E FFFC                        259                  MOVE.L  -4(A6),A0
000025EC  4E5E                             260                  UNLK    A6
000025EE  4E75                             261                  RTS
000025F0                                   262  
000025F0                                   263      *██████╗ ██████╗ ██╗███╗   ██╗████████╗*
000025F0                                   264    ***██╔══██╗██╔══██╗██║████╗  ██║╚══██╔══╝***
000025F0                                   265  *****██████╔╝██████╔╝██║██╔██╗ ██║   ██║   *****
000025F0                                   266  *****██╔═══╝ ██╔══██╗██║██║╚██╗██║   ██║   *****
000025F0                                   267    ***██║     ██║  ██║██║██║ ╚████║   ██║   ***
000025F0                                   268      *╚═╝     ╚═╝  ╚═╝╚═╝╚═╝  ╚═══╝   ╚═╝   *
000025F0                                   269  
000025F0  4E56 FFF0                        270      PRINT:      LINK    A6,#-16         * Creacion del marco de pila y guardado de registros usados en print
000025F4  2D48 FFFC                        271                  MOVE.L  A0,-4(A6)
000025F8  2D41 FFF8                        272                  MOVE.L  D1,-8(A6)
000025FC  2D42 FFF4                        273                  MOVE.L  D2,-12(A6)
00002600  2D43 FFF0                        274                  MOVE.L  D3,-16(A6)
00002604                                   275  
00002604                                   276                  *** Seccion parametros de entrada ***
00002604  206E 0008                        277                  MOVE.L  8(A6),A0        * A0 -> primer param (direccion del buffer origen)
00002608                                   278  
00002608  B180                             279                  EOR.L   D0,D0
0000260A  302E 000C                        280                  MOVE.W  12(A6),D0       * D0 -> segundo param (descriptor del dispositivo sobre el que se lee)
0000260E                                   281                                          * No se debe usar D1 ya que es un parametro de ESCCAR
0000260E  B582                             282                  EOR.L   D2,D2 * Puede que no haga falta este
00002610  342E 000E                        283                  MOVE.W  14(A6),D2       * D2 -> tercer param (size, num max de caracteres a copiar)
00002614                                   284  
00002614  B783                             285                  EOR.L   D3,D3           * D3 -> retorno (contador de carcteres escritos)
00002616                                   286  
00002616                                   287                  *** Seccion de deteccion de errores ***
00002616  B47C 0000                        288                  CMP.W   #0,D2           * Si el size < 0 -> error (absurdo!)
0000261A  6D00 0068                        289                  BLT     PR_ERR
0000261E  B07C 0001                        290                  CMP.W   #1,D0           * Si el desc > 1 -> buffer desc incorrecto
00002622  6E00 0060                        291                  BGT     PR_ERR
00002626  B07C 0000                        292                  CMP.W   #0,D0           * Si el desc < 0 -> buffer desc incorrecto
0000262A  6D00 0058                        293                  BLT     PR_ERR
0000262E                                   294  
0000262E                                   295                  *** Seccion escritura en buffer ***
0000262E  B47C 0000                        296      PR_BUF:     CMP.W   #0,D2
00002632  6700 0020                        297                  BEQ     PR_MTX
00002636  302E 000C                        298                  MOVE.W  12(A6),D0       * Reestablecemos el desc. del dispositivo sobre el que escribir
0000263A  5440                             299                  ADD.W   #2,D0           * Para obtener el descriptor del buffer interno 2 = trans A, 3 = trans B
0000263C  B381                             300                  EOR.L   D1,D1 * Puede que esta linea sobre
0000263E  1218                             301                  MOVE.B  (A0)+,D1
00002640  6100 FEDC                        302                  BSR     ESCCAR          * Params: D0 -> desc (2+X para X = 0 e 1), D1 -> buff pointer
00002644  B0BC FFFFFFFF                    303                  CMP.L   #-1,D0          * Si empty buffer -> se va al final
0000264A  6700 0008                        304                  BEQ     PR_MTX
0000264E  5342                             305                  SUB.W   #1,D2           * Size --
00002650  5283                             306                  ADD.L   #1,D3           * Contador ++
00002652  60DA                             307                  BRA     PR_BUF
00002654                                   308  
00002654  B6BC 00000000                    309      PR_MTX:     CMP.L   #0,D3
0000265A  6700 0022                        310                  BEQ     PR_OK           * Si no se escribe nada, no es necesario hacer gestion mutex
0000265E  40C0                             311                  MOVE.W  SR,D0           * Salvamos SR (status register)
00002660                                   312                  * Puede crearse una variable global con valor $2700
00002660  46FC 2700                        313                  MOVE.W  #$2700,SR       *  Inhibir interrupciones
00002664                                   314                  * Para dejar en T Ready la linea A, necesitamos activar el bit 0
00002664                                   315                  * Para dejar en T Ready la linea B, necesitamos activar el bit 4
00002664                                   316                  * Si multiplicamos 4 por el descriptor de entrada (0 e 1) tenemos el bit que deseamos de IMR
00002664  342E 000C                        317                  MOVE.W  12(A6),D2
00002668  C4FC 0004                        318                  MULU    #4,D2
0000266C  1238 2397                        319                  MOVE.B  IMRCOPY,D1
00002670  05F8 2397                        320                  BSET    D2,IMRCOPY           
00002674  13F8 2397 00EFFC0B               321                  MOVE.B  IMRCOPY,IMR     * Habilitamos transmision por linea correspondiente
0000267C  46C0                             322                  MOVE.W  D0,SR           * Restauramos SR (status register)
0000267E                                   323  
0000267E                                   324                  *** Seccion return ***
0000267E  2003                             325      PR_OK:      MOVE.L  D3,D0           * D3 (ret -> num car escritos) MV a D0
00002680  6000 0004                        326                  BRA     PR_END
00002684                                   327  
00002684  70FF                             328      PR_ERR:     MOVE.L  #-1,D0
00002686                                   329  
00002686  262E FFF0                        330      PR_END:     MOVE.L  -16(A6),D3
0000268A  242E FFF4                        331                  MOVE.L  -12(A6),D2
0000268E  222E FFF8                        332                  MOVE.L  -8(A6),D1
00002692  206E FFFC                        333                  MOVE.L  -4(A6),A0
00002696  4E5E                             334                  UNLK    A6
00002698  4E75                             335                  RTS
0000269A                                   336  
0000269A                                   337      *██████╗ ████████╗██╗*
0000269A                                   338    ***██╔══██╗╚══██╔══╝██║***
0000269A                                   339  *****██████╔╝   ██║   ██║*****
0000269A                                   340  *****██╔══██╗   ██║   ██║*****
0000269A                                   341    ***██║  ██║   ██║   ██║***
0000269A                                   342      *╚═╝  ╚═╝   ╚═╝   ╚═╝*
0000269A                                   343  
0000269A  4E56 FFF8                        344      RTI:        LINK    A6,#-8          * Creacion del marco de pila y guardado de registros utilizados por RTI
0000269E  2D40 FFFC                        345                  MOVE.L  D0,-4(A6)
000026A2  2D41 FFF8                        346                  MOVE.L  D1,-8(A6)
000026A6                                   347  
000026A6                                   348                  *** Seccion de deteccion de la fuente de interrupcion **
000026A6  1239 00EFFC0B                    349      RTI_LOOP:   MOVE.B  ISR,D1
000026AC  C238 2397                        350                  AND.B   IMRCOPY,D1
000026B0                                   351  
000026B0  0801 0001                        352                  BTST    #1,D1           * Si bit 1 de IMR e ISR activos -> Recepcion A
000026B4  6600 001E                        353                  BNE     RE_A
000026B8                                   354  
000026B8  0801 0005                        355                  BTST    #5,D1           * Si bit 5 de IMR e ISR activos -> Recepcion B
000026BC  6600 0022                        356                  BNE     RE_B
000026C0                                   357  
000026C0  0801 0000                        358                  BTST    #0,D1           * Si bit 1 de IMR e ISR activos -> Recepcion A
000026C4  6600 0032                        359                  BNE     TR_A
000026C8                                   360  
000026C8  0801 0004                        361                  BTST    #4,D1           * Si bit 1 de IMR e ISR activos -> Recepcion B
000026CC  6600 0054                        362                  BNE     TR_B
000026D0                                   363  
000026D0  6000 0078                        364                  BRA     RTI_END         * No se ha encontrado una interrupcion que podamos manejar
000026D4                                   365  
000026D4                                   366                  *** Seccion recepcion **
000026D4  7000                             367      RE_A:       MOVE.L  #0,D0           * Descriptor buffer recepcion A (0)
000026D6  1239 00EFFC07                    368                  MOVE.B  RBA,D1          * Direccion de linea de recepcion A ($EFFC07)
000026DC  6000 000A                        369                  BRA     RE_AYB
000026E0                                   370  
000026E0  7001                             371      RE_B:       MOVE.L  #1,D0           * Descriptor buffer recepcion A (1)
000026E2  1239 00EFFC17                    372                  MOVE.B  RBB,D1          * Direccion de linea de recepcion B ($EFFC17)
000026E8                                   373  
000026E8  6100 FE34                        374      RE_AYB:     BSR     ESCCAR
000026EC  B0BC FFFFFFFF                    375                  CMP.L   #-1,D0
000026F2                                   376  *** ESTAMOS CONSUMIENDO TODOS LOS CARACTERES A PESAR DE QUE EL BUFFER ESTA LLENO ??? ***
000026F2                                   377  *** ES POSIBLE QUE INTENTEMOS SEGUIR LEYENDO A PESAR DE QUE LA LINEA YA NO MANDE NADA ***
000026F2  6700 0056                        378                  BEQ     RTI_END         * Si el buffer indicado esta lleno, salimos de la RTI
000026F6  60AE                             379                  BRA     RTI_LOOP        * Si faltan caracteres por leer, realizamos otra itracion en RTI
000026F8                                   380  
000026F8                                   381                  *** Seccion transmision ***
000026F8  7002                             382      TR_A:       MOVE.L  #2,D0           * Descriptor buffer transmision A (2)
000026FA  6100 FDC8                        383                  BSR     LEECAR
000026FE  B0BC FFFFFFFF                    384                  CMP.L   #-1,D0          * Si el buffer indicado esta vacio, reseteamos IMR y salimos de la RTI
00002704  6700 000A                        385                  BEQ     RESET_A
00002708  13C0 00EFFC07                    386                  MOVE.B  D0,TBA          * Si se ha leido caracter, lo escribimos en la linea de transmision A
0000270E  6096                             387                  BRA     RTI_LOOP
00002710  08B8 0000 2397                   388      RESET_A:    BCLR    #0,IMRCOPY      * Inhibimos transmision por A
00002716  13F8 2397 00EFFC0B               389                  MOVE.B  IMRCOPY,IMR
0000271E  6000 002A                        390                  BRA     RTI_END
00002722                                   391  
00002722  7003                             392      TR_B:       MOVE.L  #3,D0           * Descriptor buffer transmision B (3)    
00002724  6100 FD9E                        393                  BSR     LEECAR
00002728  B0BC FFFFFFFF                    394                  CMP.L   #-1,D0          * Si el buffer indicado esta vacio, reseteamos IMR y salimos de la RTI
0000272E  6700 000C                        395                  BEQ     RESET_B
00002732  13C0 00EFFC17                    396                  MOVE.B  D0,TBB          * Si se ha leido caracter, lo escribimos en la linea de transmision B
00002738  6000 FF6C                        397                  BRA     RTI_LOOP
0000273C                                   398  
0000273C  08B8 0004 2397                   399      RESET_B:    BCLR    #4,IMRCOPY      * Inhibimos transmision por B
00002742  13F8 2397 00EFFC0B               400                  MOVE.B  IMRCOPY,IMR
0000274A                                   401  				
0000274A                                   402                  *** Seccion return ***
0000274A  222E FFF8                        403      RTI_END:    MOVE.L  -8(A6),D1
0000274E  202E FFFC                        404                  MOVE.L  -4(A6),D0
00002752  4E5E                             405                  UNLK    A6
00002754  4E73                             406                  RTE
00002756                                   407  
00002756                                   408  
00002756                                   409      *██████╗ ██████╗ ██╗   ██╗███████╗██████╗  █████╗ ███████╗*
00002756                                   410    ***██╔══██╗██╔══██╗██║   ██║██╔════╝██╔══██╗██╔══██╗██╔════╝***
00002756                                   411  *****██████╔╝██████╔╝██║   ██║█████╗  ██████╔╝███████║███████╗*****
00002756                                   412  *****██╔═══╝ ██╔══██╗██║   ██║██╔══╝  ██╔══██╗██╔══██║╚════██║*****
00002756                                   413    ***██║     ██║  ██║╚██████╔╝███████╗██████╔╝██║  ██║███████║***
00002756                                   414      *╚═╝     ╚═╝  ╚═╝ ╚═════╝ ╚══════╝╚═════╝ ╚═╝  ╚═╝╚══════╝*
00002756                                   415  
00005000                                   416      ORG $5000
00005000                                   417  BUFFER:     DS.B    2100 * Buffer para lectura y escritura de caracteres
00005834  00000000                         418  PARDIR:     DC.L    0 * Direcci´on que se pasa como par´ametro
00005838  0000                             419  PARTAM:     DC.W    0 * Tama~no que se pasa como par´ametro
0000583A  0000                             420  CONTC:      DC.W    0 * Contador de caracteres a imprimir
0000583C  =00000000                        421  DESA:       EQU     0 * Descriptor l´ınea A
0000583C  =00000001                        422  DESB:       EQU     1 * Descriptor l´ınea B
0000583C  =0000001E                        423  TAMBS:      EQU     30 * Tama~no de bloque para SCAN
0000583C  =00000007                        424  TAMBP:      EQU     7 * Tama~no de bloque para PRINT
0000583C                                   425  * Manejadores de excepciones
0000583C  21FC 00005914 0008               426  INICIO:     MOVE.L #BUS_ERROR,8 * Bus error handler
00005844  21FC 00005918 000C               427              MOVE.L #ADDRESS_ER,12 * Address error handler
0000584C  21FC 0000591C 0010               428              MOVE.L #ILLEGAL_IN,16 * Illegal instruction handler
00005854  21FC 00005920 0020               429              MOVE.L #PRIV_VIOLT,32 * Privilege violation handler
0000585C  21FC 0000591C 0028               430              MOVE.L #ILLEGAL_IN,40 * Illegal instruction handler
00005864  21FC 0000591C 002C               431              MOVE.L #ILLEGAL_IN,44 * Illegal instruction handler
0000586C                                   432  
0000586C  6100 CB2A                        433              BSR INIT
00005870  46FC 2000                        434              MOVE.W #$2000,SR * Permite interrupciones
00005874                                   435  
00005874  6000 0086                        436              BRA PR_EX_1
00005878                                   437  
00005878                                   438  *** Hay que escribir en el buffer A (0) el contenido que queremos tratar ***
00005878  363C 07D0                        439              MOVE.W #2000,D3
0000587C  3E3C 0000                        440              MOVE.W #0,D7
00005880  6100 03FE                        441              BSR BUCESNFF
00005884  B783                             442              EOR.L D3,D3
00005886  BF87                             443              EOR.L D7,D7
00005888  31FC 001E 5838                   444  BUCPR:      MOVE.W #TAMBS,PARTAM * Inicializa par´ametro de tama~no
0000588E  21FC 00005000 5834               445              MOVE.L #BUFFER,PARDIR * Par´ametro BUFFER = comienzo del buffer
00005896  3F38 5838                        446  OTRAL:      MOVE.W PARTAM,-(A7) * Tama~no de bloque
0000589A  3F3C 0000                        447              MOVE.W #DESA,-(A7) * Puerto A
0000589E  2F38 5834                        448              MOVE.L PARDIR,-(A7) * Direcci´on de lectura
000058A2  6100 CCD0                        449  ESPL:       BSR SCAN
000058A6  508F                             450              ADD.L #8,A7 * Restablece la pila
000058A8  D1B8 5834                        451              ADD.L D0,PARDIR * Calcula la nueva direcci´on de lectura
000058AC  9178 5838                        452              SUB.W D0,PARTAM * Actualiza el n´umero de caracteres le´ıdos
000058B0  66E4                             453              BNE OTRAL * Si no se han le´ıdo todas los caracteres
000058B2                                   454  
000058B2                                   455              * del bloque se vuelve a leer
000058B2  31FC 001E 583A                   456              MOVE.W #TAMBS,CONTC * Inicializa contador de caracteres a imprimir
000058B8  21FC 00005000 5834               457              MOVE.L #BUFFER,PARDIR * Par´ametro BUFFER = comienzo del buffer
000058C0  31FC 0007 5838                   458  OTRAE:      MOVE.W #TAMBP,PARTAM * Tama~no de escritura = Tama~no de bloque
000058C6  3F38 5838                        459  ESPE:       MOVE.W PARTAM,-(A7) * Tama~no de escritura
000058CA  3F3C 0001                        460              MOVE.W #DESB,-(A7) * Puerto B
000058CE  2F38 5834                        461              MOVE.L PARDIR,-(A7) * Direcci´on de escritura
000058D2  6100 CD1C                        462              BSR PRINT
000058D6  508F                             463              ADD.L #8,A7 * Restablece la pila
000058D8  D1B8 5834                        464              ADD.L D0,PARDIR * Calcula la nueva direcci´on del buffer
000058DC  9178 583A                        465              SUB.W D0,CONTC * Actualiza el contador de caracteres
000058E0  6700 0018                        466              BEQ SALIR * Si no quedan caracteres se acaba
000058E4  9178 5838                        467              SUB.W D0,PARTAM * Actualiza el tama~no de escritura
000058E8  66DC                             468              BNE ESPE * Si no se ha escrito todo el bloque se insiste
000058EA  0C78 0007 583A                   469              CMP.W #TAMBP,CONTC * Si el no de caracteres que quedan es menor que
000058F0                                   470              * el tama~no establecido se imprime ese n´umero
000058F0                                   471  
000058F0  62CE                             472              BHI OTRAE * Siguiente bloque
000058F2  31F8 583A 5838                   473              MOVE.W CONTC,PARTAM
000058F8  60CC                             474              BRA ESPE * Siguiente bloque
000058FA                                   475  
000058FA  608C                             476  SALIR:      BRA BUCPR
000058FC                                   477  
000058FC                                   478  PR_EX_1:
000058FC  6100 CA9A                        479      BSR INIT
00005900                                   480      
00005900                                   481      * Llamada a PRINT
00005900  3F3C 000B                        482      MOVE.W  #11,-(A7)        * Tamaño
00005904  3F3C 0000                        483      MOVE.W  #0,-(A7)         * Descriptor
00005908  2F3C 00005000                    484      MOVE.L  #$5000,-(A7)      * Buffer
0000590E  6100 CCE0                        485      BSR     PRINT
00005912  2C05                             486      MOVE.L  D5,D6
00005914                                   487  
00005914                                   488  BUS_ERROR:  
00005914  4848                             489      BREAK                    * Bus error handler
00005916  4E71                             490      NOP
00005918                                   491  
00005918                                   492  ADDRESS_ER:
00005918  4848                             493      BREAK                    * Address error handler
0000591A  4E71                             494      NOP
0000591C                                   495  
0000591C                                   496  ILLEGAL_IN:
0000591C  4848                             497      BREAK                    * Illegal instruction handler
0000591E  4E71                             498      NOP
00005920                                   499  
00005920                                   500  PRIV_VIOLT:
00005920  4848                             501      BREAK                    * Priviledge violation handler
00005922  4E71                             502      NOP
00005924                                   503  
00005924                                   504  
00005924                                   505  
00005924                                   506  PPAL: * Manejadores de excepciones
00005924  21FC 00005914 0008               507      MOVE.L  #BUS_ERROR,8     * Bus error handler
0000592C  21FC 00005918 000C               508      MOVE.L  #ADDRESS_ER,12   * Address error handler
00005934  21FC 0000591C 0010               509      MOVE.L  #ILLEGAL_IN,16   * Illegal instruction handler
0000593C  21FC 00005920 0020               510      MOVE.L  #PRIV_VIOLT,32   * Privilege Violation handler
00005944                                   511  
00005944  6100 CA52                        512      BSR     INIT
00005948                                   513  
00005948  6000 01EA                        514      BRA     p_scan_2
0000594C                                   515  
0000594C                                   516      *██╗  ██╗██╗████████╗ ██████╗      ██╗*
0000594C                                   517    ***██║  ██║██║╚══██╔══╝██╔═══██╗    ███║***
0000594C                                   518  *****███████║██║   ██║   ██║   ██║    ╚██║*****
0000594C                                   519  *****██╔══██║██║   ██║   ██║   ██║     ██║*****
0000594C                                   520    ***██║  ██║██║   ██║   ╚██████╔╝     ██║***
0000594C                                   521      *╚═╝  ╚═╝╚═╝   ╚═╝    ╚═════╝      ╚═╝*
0000594C                                   522  
0000594C                                   523  pr02es_int:
0000594C  7000                             524      MOVE.L #0,D0
0000594E  7201                             525      MOVE.L #1,D1
00005950  6100 CBCC                        526      BSR ESCCAR      * D0 tiene que ser 0
00005954  B0BC 00000000                    527      CMP.L   #0,D0
0000595A  6600 02DC                        528      BNE     AMENTET
0000595E                                   529  
0000595E                                   530  pr03es_int:
0000595E  760A                             531      MOVE.L #10,D3
00005960  7E01                             532      MOVE.L #1,D7
00005962  6100 030A                        533      BSR BUCESN1S
00005966  B0BC 00000000                    534      CMP.L   #0,D0
0000596C  6600 02CA                        535      BNE     AMENTET
00005970                                   536  
00005970                                   537  pr04es_int:
00005970  7E02                             538      MOVE.L #2,D7
00005972  263C 0000012C                    539      MOVE.L #300,D3
00005978  6100 0306                        540      BSR BUCESNFF
0000597C  B0BC 00000000                    541      CMP.L   #0,D0
00005982  6600 02B4                        542      BNE     AMENTET
00005986                                   543  
00005986                                   544  pr05es_int:
00005986  263C 000007D0                    545      MOVE.L #2000,D3
0000598C  7E03                             546      MOVE.L #3,D7
0000598E  6100 02F0                        547      BSR BUCESNFF
00005992  B0BC 00000000                    548      CMP.L   #0,D0
00005998  6600 029E                        549      BNE     AMENTET
0000599C                                   550  
0000599C                                   551  pr06es_int:
0000599C  263C 000007D0                    552      MOVE.L #2000,D3
000059A2  7E03                             553      MOVE.L #3,D7
000059A4  6100 02DA                        554      BSR BUCESNFF
000059A8  7003                             555      MOVE.L #3,D0
000059AA  720B                             556      MOVE.L #11,D1 * caracter 2001
000059AC  6100 CB70                        557      BSR ESCCAR
000059B0  B0BC FFFFFFFF                    558      CMP.L   #-1,D0
000059B6  6600 0280                        559      BNE     AMENTET
000059BA                                   560  
000059BA                                   561  pr07es_int:
000059BA  7000                             562      MOVE.L #0,D0
000059BC  6100 CB06                        563      BSR LEECAR
000059C0  7000                             564      MOVE.L #0,D0
000059C2  6100 CB00                        565      BSR LEECAR
000059C6  B0BC FFFFFFFF                    566      CMP.L   #-1,D0
000059CC  6600 026A                        567      BNE     AMENTET
000059D0                                   568  
000059D0                                   569  pr08es_int:
000059D0  263C 000000C8                    570      MOVE.L #200,D3
000059D6  7E00                             571      MOVE.L #0,D7
000059D8  6100 02A6                        572      BSR BUCESNFF
000059DC  7000                             573      MOVE.L #0,D0
000059DE  6100 CAE4                        574      BSR LEECAR
000059E2  B0BC 00000000                    575      CMP.L #0,D0
000059E8  6600 024E                        576      BNE     AMENTET
000059EC                                   577  pr09es_int:
000059EC  263C 000000C8                    578      MOVE.L #200,D3
000059F2  7E01                             579      MOVE.L #1,D7
000059F4  6100 028A                        580      BSR BUCESNFF
000059F8  7E01                             581      MOVE.L #1,D7
000059FA  760A                             582      MOVE.L #10,D3
000059FC  6100 02CA                        583      BSR BUCLEEN
00005A00  B0BC 00000009                    584      CMP.L #$9,D0
00005A06  6600 0230                        585      BNE AMENTET
00005A0A                                   586  pr10es_int:
00005A0A  263C 0000012C                    587      MOVE.L #300,D3
00005A10  7E02                             588      MOVE.L #2,D7
00005A12  6100 026C                        589      BSR BUCESNFF
00005A16  7E02                             590      MOVE.L #2,D7
00005A18  263C 0000012C                    591      MOVE.L #300,D3
00005A1E  6100 02A8                        592      BSR BUCLEEN
00005A22  B0BC 0000002B                    593      CMP.L #$2B,D0
00005A28  6600 020E                        594      BNE AMENTET
00005A2C                                   595  pr11es_int:
00005A2C  263C 000007D0                    596      MOVE.L #2000,D3
00005A32  7E03                             597      MOVE.L #3,D7
00005A34  6100 024A                        598      BSR BUCESNFF
00005A38  7E03                             599      MOVE.L #3,D7
00005A3A  263C 000007D0                    600      MOVE.L #2000,D3
00005A40  6100 0286                        601      BSR BUCLEEN
00005A44  B0BC 000000CF                    602      CMP.L #$CF,D0
00005A4A  6600 01EC                        603      BNE AMENTET
00005A4E                                   604  *
00005A4E                                   605  pr12es_int:
00005A4E  263C 00000708                    606      MOVE.L #1800,D3
00005A54  7E00                             607      MOVE.L #0,D7
00005A56  6100 0228                        608      BSR BUCESNFF
00005A5A  7E00                             609      MOVE.L #0,D7
00005A5C  7664                             610      MOVE.L #100,D3
00005A5E  6100 0268                        611      BSR BUCLEEN
00005A62  263C 0000012C                    612      MOVE.L #300,D3
00005A68  7E00                             613      MOVE.L #0,D7
00005A6A  6100 0214                        614      BSR BUCESNFF
00005A6E  B0BC 00000000                    615      CMP.L #0,D0
00005A74  6600 01C2                        616      BNE AMENTET
00005A78                                   617  pr13es_int:
00005A78  263C 000007D0                    618      MOVE.L #2000,D3
00005A7E  7E01                             619      MOVE.L #1,D7
00005A80  6100 01FE                        620      BSR BUCESNFF
00005A84  7001                             621      MOVE.L #1,D0
00005A86  7201                             622      MOVE.L #1,D1
00005A88  6100 CA3A                        623      BSR LEECAR
00005A8C  7602                             624      MOVE.L #2,D3
00005A8E  7E01                             625      MOVE.L #1,D7
00005A90  6100 01EE                        626      BSR BUCESNFF
00005A94  B0BC FFFFFFFF                    627      CMP.L   #-1,D0
00005A9A  6600 019C                        628      BNE     AMENTET
00005A9E                                   629  pr14es_int:
00005A9E  263C 000007D0                    630      MOVE.L #2000,D3
00005AA4  7E02                             631      MOVE.L #2,D7
00005AA6  6100 01D8                        632      BSR BUCESNFF
00005AAA  7E02                             633      MOVE.L #2,D7
00005AAC  760A                             634      MOVE.L #10,D3
00005AAE  6100 0218                        635      BSR BUCLEEN
00005AB2  760A                             636      MOVE.L #10,D3
00005AB4  7E02                             637      MOVE.L #2,D7
00005AB6  6100 01C8                        638      BSR BUCESNFF
00005ABA  7E02                             639      MOVE.L #2,D7
00005ABC  263C 000007D0                    640      MOVE.L #2000,D3
00005AC2  6100 0204                        641      BSR BUCLEEN
00005AC6  B0BC 00000009                    642      CMP.L #$9,D0
00005ACC  6600 016A                        643      BNE     AMENTET
00005AD0                                   644  pr15es_int:
00005AD0  263C 000007D0                    645      MOVE.L #2000,D3
00005AD6  7E03                             646      MOVE.L #3,D7
00005AD8  6100 01A6                        647      BSR BUCESNFF
00005ADC  7E03                             648      MOVE.L #3,D7
00005ADE  263C 000003E8                    649      MOVE.L #1000,D3
00005AE4  6100 01E2                        650      BSR BUCLEEN
00005AE8  263C 000003E8                    651      MOVE.L #1000,D3
00005AEE  7E03                             652      MOVE.L #3,D7
00005AF0  6100 018E                        653      BSR BUCESNFF
00005AF4  7E03                             654      MOVE.L #3,D7
00005AF6  263C 000005DC                    655      MOVE.L #1500,D3
00005AFC  6100 01CA                        656      BSR BUCLEEN
00005B00  B0BC 000000F3                    657      CMP.L #$F3,D0
00005B06  6600 0130                        658      BNE     AMENTET
00005B0A                                   659  
00005B0A                                   660      *███████╗ ██████╗ █████╗ ███╗   ██╗*
00005B0A                                   661    ***██╔════╝██╔════╝██╔══██╗████╗  ██║***
00005B0A                                   662  *****███████╗██║     ███████║██╔██╗ ██║*****
00005B0A                                   663  *****╚════██║██║     ██╔══██║██║╚██╗██║*****
00005B0A                                   664    ***███████║╚██████╗██║  ██║██║ ╚████║***
00005B0A                                   665      *╚══════╝ ╚═════╝╚═╝  ╚═╝╚═╝  ╚═══╝*
00005B0A                                   666  
00005B0A                                   667  *** Prueba scan 1: inserta 100 caracteres en el buffer interno de recepcion de la linea A (0)
00005B0A                                   668  *** se leen 100. Resultado esperado -> D0 = 64 (100 en hex)
00005B0A                                   669  
00005B0A                                   670  p_scan_1:
00005B0A  263C 00000100                    671      MOVE.L  #$100,D3
00005B10  7E00                             672      MOVE.L  #0,D7
00005B12  6100 016C                        673      BSR     BUCESNFF
00005B16  3F3C 0100                        674      MOVE.W  #$100,-(A7)
00005B1A  3F3C 0000                        675      MOVE.W  #0,-(A7)
00005B1E  2F3C 00005000                    676      MOVE.L  #$5000,-(A7)
00005B24  6100 CA4E                        677      BSR     SCAN
00005B28  508F                             678      ADD.L #8,A7 * Restablece la pila
00005B2A  B0BC 00000100                    679      CMP.L   #$100,D0
00005B30  6600 0106                        680      BNE     AMENTET
00005B34                                   681  
00005B34                                   682  *** Prueba scan 2: inserta 100 caracteres en el buffer interno de recepcion de la linea B (1)
00005B34                                   683  *** se leen 25 caracteres 4 veces de tal manera que el buffer quede vacio. Resultado esperado:
00005B34                                   684  *** D0 = 19 (25 en hex). Pos $50FF en memoria = pos $D01
00005B34                                   685                                    
00005B34                                   686  p_scan_2:
00005B34  263C 00000094                    687              MOVE.L  #$94,D3         * 25 * 4 es 94 en hex
00005B3A  7E01                             688              MOVE.L  #1,D7
00005B3C  6100 0142                        689              BSR    BUCESNFF
00005B40  7800                             690              MOVE.L  #0,D4
00005B42  B8BC 00000004                    691  p_s_2_b:    CMP.L   #4,D4
00005B48  6700 0024                        692              BEQ     p_s_2_e
00005B4C  3F3C 0025                        693              MOVE.W  #$25,-(A7)
00005B50  3F3C 0001                        694              MOVE.W  #1,-(A7)
00005B54  2F3C 00005000                    695              MOVE.L  #$5000,-(A7)
00005B5A  6100 CA18                        696              BSR     SCAN
00005B5E  508F                             697              ADD.L #8,A7 * Restablece la pila
00005B60  B0BC 00000025                    698              CMP.L   #$25,D0
00005B66  6600 00D0                        699              BNE     AMENTET
00005B6A  5284                             700              ADD.L   #1,D4
00005B6C  60D4                             701              BRA     p_s_2_b
00005B6E  2803                             702  p_s_2_e:    MOVE.L  D3,D4
00005B70                                   703  
00005B70                                   704  
00005B70                                   705  *** Prueba scan 3: inserta 10 caracteres y se intenta leer 20 en el buffer interno de recepcion A (0)
00005B70                                   706  *** El resultado esperado es 10 en D0 y guardar desde 00 hasta 09 en la posicion $5000 de memoria
00005B70  760A                             707  p_scan_3:   MOVE.L  #10,D3
00005B72  7E00                             708              MOVE.L  #0,D7
00005B74  6100 010A                        709              BSR     BUCESNFF
00005B78  3F3C 0014                        710              MOVE.W  #20,-(A7)
00005B7C  3F3C 0000                        711              MOVE.W  #0,-(A7)
00005B80  2F3C 00005000                    712              MOVE.L  #$5000,-(A7)
00005B86  6100 C9EC                        713              BSR     SCAN
00005B8A  508F                             714              ADD.L #8,A7 * Restablece la pila
00005B8C  B0BC 0000000A                    715              CMP.L   #10,D0
00005B92  6600 00A4                        716              BNE     AMENTET
00005B96  2803                             717              MOVE.L  D3,D4
00005B98                                   718  
00005B98                                   719      *██████╗ ██████╗ ██╗███╗   ██╗████████╗*
00005B98                                   720    ***██╔══██╗██╔══██╗██║████╗  ██║╚══██╔══╝***
00005B98                                   721  *****██████╔╝██████╔╝██║██╔██╗ ██║   ██║   *****
00005B98                                   722  *****██╔═══╝ ██╔══██╗██║██║╚██╗██║   ██║   *****
00005B98                                   723    ***██║     ██║  ██║██║██║ ╚████║   ██║   ***
00005B98                                   724      *╚═╝     ╚═╝  ╚═╝╚═╝╚═╝  ╚═══╝   ╚═╝   *
00005B98                                   725  
00005B98                                   726  *** Prueba print 1: inserta $100 caracteres en el buffer interno de transmision B (3),
00005B98                                   727  *** estos caracteres estan contenidos a partir de la dir mem $5000.
00005B98                                   728  
00005B98                                   729  p_prt_1:
00005B98  3F3C 0100                        730              MOVE.W  #$100,-(A7)
00005B9C  3F3C 0001                        731              MOVE.W  #1,-(A7)
00005BA0  2F3C 00005000                    732              MOVE.L  #$5000,-(A7)
00005BA6  6100 CA48                        733              BSR     PRINT
00005BAA  508F                             734              ADD.L #8,A7 * Restablece la pila
00005BAC  B0BC 00000100                    735              CMP.L   #$100,D0
00005BB2  6600 0084                        736              BNE     AMENTET
00005BB6  2803                             737              MOVE.L  D3,D4
00005BB8                                   738  
00005BB8                                   739  *** Prueba print 2: inserta 2000 caracteres en el buffer interno de transmision B (3),
00005BB8                                   740  *** estos estan contenido a partir de la dir mem $5001. Para que empiece por 1 y no por 0
00005BB8                                   741  *** Como ya se han escrito antes $100, no se podran escribir todos, devolviendo el numero
00005BB8                                   742  *** de caracteres escritos en D0 con valor: 6D0
00005BB8                                   743  
00005BB8                                   744  p_prt_2:
00005BB8  3F3C 07D0                        745              MOVE.W  #2000,-(A7)
00005BBC  3F3C 0001                        746              MOVE.W  #1,-(A7)
00005BC0  2F3C 00005001                    747              MOVE.L  #$5001,-(A7)
00005BC6  6100 CA28                        748              BSR     PRINT
00005BCA  508F                             749              ADD.L #8,A7 * Restablece la pila
00005BCC  B0BC 000006D0                    750              CMP.L   #$6D0,D0
00005BD2  6600 0064                        751              BNE     AMENTET
00005BD6  2803                             752              MOVE.L  D3,D4
00005BD8                                   753  
00005BD8                                   754  *** Two error cases: wrong descriptor, wrong read number
00005BD8                                   755  p_prt_3:
00005BD8  3F3C 07D0                        756              MOVE.W  #2000,-(A7)
00005BDC  3F3C FFFF                        757              MOVE.W  #-1,-(A7)
00005BE0  2F3C 00005001                    758              MOVE.L  #$5001,-(A7)
00005BE6  6100 CA08                        759              BSR     PRINT
00005BEA  508F                             760              ADD.L #8,A7 * Restablece la pila
00005BEC  B0BC FFFFFFFF                    761              CMP.L   #-1,D0
00005BF2  6600 0044                        762              BNE     AMENTET
00005BF6  2803                             763              MOVE.L  D3,D4
00005BF8                                   764  
00005BF8                                   765  p_prt_4:
00005BF8  3F3C FFFB                        766              MOVE.W  #-5,-(A7)
00005BFC  3F3C 0001                        767              MOVE.W  #1,-(A7)
00005C00  2F3C 00005001                    768              MOVE.L  #$5001,-(A7)
00005C06  6100 C9E8                        769              BSR     PRINT
00005C0A  508F                             770              ADD.L #8,A7 * Restablece la pila
00005C0C  B0BC FFFFFFFF                    771              CMP.L   #-1,D0
00005C12  6600 0024                        772              BNE     AMENTET
00005C16  2803                             773              MOVE.L  D3,D4
00005C18                                   774  
00005C18                                   775  p_prt_5:
00005C18  3F3C 0000                        776              MOVE.W  #0,-(A7)
00005C1C  3F3C 0001                        777              MOVE.W  #1,-(A7)
00005C20  2F3C 00005001                    778              MOVE.L  #$5001,-(A7)
00005C26  6100 C9C8                        779              BSR     PRINT
00005C2A  508F                             780              ADD.L #8,A7 * Restablece la pila
00005C2C  B0BC 00000000                    781              CMP.L   #0,D0
00005C32  6600 0004                        782              BNE     AMENTET
00005C36  2803                             783              MOVE.L  D3,D4
00005C38                                   784  
00005C38                                   785      * █████╗ ██╗   ██╗██╗  ██╗██╗██╗     ██╗ █████╗ ██████╗ *
00005C38                                   786    ***██╔══██╗██║   ██║╚██╗██╔╝██║██║     ██║██╔══██╗██╔══██╗***
00005C38                                   787  *****███████║██║   ██║ ╚███╔╝ ██║██║     ██║███████║██████╔╝*****
00005C38                                   788  *****██╔══██║██║   ██║ ██╔██╗ ██║██║     ██║██╔══██║██╔══██╗*****
00005C38                                   789    ***██║  ██║╚██████╔╝██╔╝ ██╗██║███████╗██║██║  ██║██║  ██║***
00005C38                                   790      *╚═╝  ╚═╝ ╚═════╝ ╚═╝  ╚═╝╚═╝╚══════╝╚═╝╚═╝  ╚═╝╚═╝  ╚═╝*
00005C38                                   791  
00005C38                                   792  * La rutina AMENTET hace referencia a la diosa egipcia homonima la cual era la patrona de las puertas
00005C38                                   793  * del inframundo en el que esperaba a los difuntos que no superaban las pruebas en su camino al paraiso.
00005C38                                   794  * En este caso, las subrutinas que no superen las pruebas, las esperara AMENTET que para indicar su fallo
00005C38                                   795  * y mandarlas corregir.
00005C38                                   796  AMENTET:
00005C38  70FF                             797              MOVE.L  #-1,D0
00005C3A  72FF                             798              MOVE.L  #-1,D1
00005C3C  74FF                             799              MOVE.L  #-1,D2
00005C3E  76FF                             800              MOVE.L  #-1,D3
00005C40  78FF                             801              MOVE.L  #-1,D4
00005C42  7AFF                             802              MOVE.L  #-1,D5
00005C44  7CFF                             803              MOVE.L  #-1,D6
00005C46  7EFF                             804              MOVE.L  #-1,D7
00005C48  207C FFFFFFFF                    805              MOVE.L  #-1,A0
00005C4E  227C FFFFFFFF                    806              MOVE.L  #-1,A1
00005C54  247C FFFFFFFF                    807              MOVE.L  #-1,A2
00005C5A  267C FFFFFFFF                    808              MOVE.L  #-1,A3
00005C60  287C FFFFFFFF                    809              MOVE.L  #-1,A4
00005C66  2A7C FFFFFFFF                    810              MOVE.L  #-1,A5
00005C6C  4848                             811              BREAK
00005C6E                                   812                                                         
00005C6E                                   813  BUCESN1S:
00005C6E  B944                             814      EOR D4,D4 *Contador de elementos
00005C70                                   815      buc1:
00005C70  7201                             816          MOVE.L #1,D1 *Variable 1 que queremos meter en el buffer n veces
00005C72  2007                             817          MOVE.L D7,D0
00005C74  6100 C8A8                        818          BSR ESCCAR
00005C78  5284                             819          ADD.L #1,D4
00005C7A  B883                             820          CMP.L D3,D4
00005C7C  66F2                             821          BNE buc1
00005C7E  4E75                             822      RTS
00005C80                                   823  
00005C80                                   824  
00005C80                                   825  
00005C80                                   826  BUCESNFF:
00005C80  B944                             827      EOR D4,D4
00005C82  B341                             828      EOR D1,D1
00005C84                                   829      buc2:
00005C84  2007                             830          MOVE.L D7,D0
00005C86  6100 C896                        831          BSR ESCCAR
00005C8A  5284                             832          ADD.L #1,D4
00005C8C  5281                             833          ADD.L #1,D1
00005C8E  B2BC 00000100                    834          CMP.L #$100,D1
00005C94  6700 0006                        835          BEQ D1ZERO
00005C98  6000 0004                        836          BRA FINB1
00005C9C  B341                             837          D1ZERO: EOR D1,D1
00005C9E  B883                             838          FINB1: CMP.L D3,D4
00005CA0  66E2                             839          BNE buc2
00005CA2  4E75                             840      RTS
00005CA4                                   841  
00005CA4                                   842  
00005CA4                                   843  
00005CA4                                   844  
00005CA4                                   845  BUCESN09:
00005CA4  B944                             846      EOR D4,D4
00005CA6  B341                             847      EOR D1,D1
00005CA8                                   848      buc4:
00005CA8  2007                             849          MOVE.L D7,D0
00005CAA  6100 C872                        850          BSR ESCCAR
00005CAE  5284                             851          ADD.L #1,D4
00005CB0  5281                             852          ADD.L #1,D1
00005CB2  B2BC 0000000A                    853          CMP.L #10,D1
00005CB8  6700 0006                        854          BEQ D1ZERO2
00005CBC  6000 0004                        855          BRA FINB12
00005CC0  B341                             856          D1ZERO2: EOR D1,D1
00005CC2  B883                             857          FINB12: CMP.L D3,D4
00005CC4  66E2                             858          BNE buc4
00005CC6  4E75                             859      RTS
00005CC8                                   860  
00005CC8                                   861  
00005CC8                                   862  BUCLEEN:
00005CC8  B944                             863      EOR D4,D4
00005CCA                                   864      buc3:
00005CCA  2007                             865          MOVE.L D7,D0
00005CCC  6100 C7F6                        866          BSR LEECAR
00005CD0  5284                             867          ADD.L #1,D4
00005CD2  B883                             868          CMP.L D3,D4
00005CD4  66F4                             869          BNE buc3
00005CD6  4E75                             870      RTS
00005CD8                                   871  
00005CD8  B0BC 00000000                    872  COMPCOR: CMP.L #0,D0
00005CDE  6700 0012                        873      BEQ BIEN
00005CE2  6000 0018                        874      BRA MAL
00005CE6                                   875  
00005CE6  B07C FFFF                        876  COMPF: CMP #-1,D0
00005CEA  6700 0006                        877      BEQ BIEN
00005CEE  6000 000C                        878      BRA MAL
00005CF2                                   879  
00005CF2  2A3C ABCDEF10                    880  BIEN: MOVE.L #$abcdef10,D5
00005CF8  6000 0004                        881      BRA FINC
00005CFC                                   882  
00005CFC  7AFF                             883  MAL: MOVE.L #-1,D5
00005CFE                                   884  
00005CFE  4848                             885  FINC: BREAK

No errors detected
No warnings generated
