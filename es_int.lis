00000000                                     1      ORG $0
00000000  00008000                           2      DC.L $8000 * Valor inicial del puntero de pila
00000004  0000262A                           3      DC.L PPAL * Direccion RTI de la interrupcion Reset, etiqueta del programa ppal
00000008                                     4  
00000400                                     5      ORG $400
00000400                                     6  
00000400                                     7  * Almacen de buffers
00000400                                     8  
00000400  =000007D1                          9  SIZE EQU 2001                   * Size de los buffers
00000400                                    10  
00000400  00000000 00000000 00000000 ...    11      BUFF_V:     DC.L    0,0,0,0     * Punteros a los buffers
00000410                                    12  
00000410                                    13  * extraccion, insercion, pos inicial, pos final 
00000410  00000000 00000000 00000000 ...    14      BUFF_0:     DC.L    0,0,0,0     * Buffer 0 -> Recepcion A
00000420                                    15                  DS.B    SIZE
00000BF1                                    16  
00000BF2  00000000 00000000 00000000 ...    17      BUFF_1:     DC.L    0,0,0,0     * Buffer 1 -> Recepcion B
00000C02                                    18                  DS.B    SIZE
000013D3                                    19  
000013D4  00000000 00000000 00000000 ...    20      BUFF_2:     DC.L    0,0,0,0     * Buffer 2 -> Transmision A
000013E4                                    21                  DS.B    SIZE
00001BB5                                    22  
00001BB6  00000000 00000000 00000000 ...    23      BUFF_3:     DC.L    0,0,0,0     * Buffer 3 -> Transmision B
00001BC6                                    24                  DS.B    SIZE
00002397                                    25  
00002397                                    26      IMRCOPY:    DS.B    1            * Copia de IMR ya que no puede ser leido
00002398                                    27  
00002398                                    28  * Registros de la DUART MC68681
00002398                                    29  
00002398  =00EFFC01                         30  MR1A	EQU		$EFFC01
00002398  =00EFFC01                         31  MR2A	EQU		$EFFC01
00002398  =00EFFC03                         32  SRA		EQU		$EFFC03
00002398  =00EFFC03                         33  CSRA	EQU		$EFFC03
00002398  =00EFFC05                         34  CRA		EQU		$EFFC05
00002398  =00EFFC07                         35  TBA		EQU		$EFFC07
00002398  =00EFFC07                         36  RBA		EQU		$EFFC07
00002398                                    37  
00002398  =00EFFC09                         38  ACR		EQU		$EFFC09
00002398  =00EFFC0B                         39  IMR		EQU		$EFFC0B
00002398  =00EFFC0B                         40  ISR		EQU		$EFFC0B
00002398                                    41  
00002398  =00EFFC11                         42  MR1B	EQU		$EFFC11
00002398  =00EFFC11                         43  MR2B	EQU		$EFFC11
00002398  =00EFFC15                         44  CRB     EQU     $effc15
00002398  =00EFFC17                         45  TBB     EQU     $effc17
00002398  =00EFFC17                         46  RBB     EQU     $effc17
00002398                                    47  
00002398  =00EFFC13                         48  SRB     EQU     $effc13
00002398  =00EFFC13                         49  CSRB    EQU     $effc13
00002398  =00EFFC19                         50  IVR		EQU		$EFFC19
00002398                                    51  
00002398                                    52  
00002398                                    53  
00002398                                    54  
00002398                                    55  
00002398                                    56      
00002398                                    57      INIT:
00002398                                    58          * Preparación de periféricos
00002398  13FC 0010 00EFFC05                59                  MOVE.B    #%00010000,CRA        * Reinicia el puntero MR1
000023A0  13FC 0003 00EFFC01                60                  MOVE.B    #%00000011,MR1A       * 8 bits por caracter (interrumpe cada 8 bits)
000023A8  13FC 0000 00EFFC01                61                  MOVE.B    #%00000000,MR2A       * Eco desactivado
000023B0  13FC 00CC 00EFFC03                62                  MOVE.B    #%11001100,CSRA       * Velocidad = 38400 bps
000023B8                                    63  
000023B8  13FC 0010 00EFFC15                64                  MOVE.B    #%00010000,CRB        * Reinicia el puntero MR1
000023C0  13FC 0003 00EFFC11                65                  MOVE.B    #%00000011,MR1B       * 8 bits por caracter (interrumpe cada 8 bits)
000023C8  13FC 0000 00EFFC11                66                  MOVE.B    #%00000000,MR2B       * Eco desactivado
000023D0  13FC 00CC 00EFFC13                67                  MOVE.B    #%11001100,CSRB       * Velocidad = 38400 bps
000023D8                                    68  
000023D8  13FC 0000 00EFFC09                69                  MOVE.B    #%00000000,ACR        * Velocidad = 38400 bps
000023E0  13FC 0005 00EFFC05                70                  MOVE.B    #%00000101,CRA        * Transmision y recepcion activados
000023E8  13FC 0005 00EFFC15                71                  MOVE.B    #%00000101,CRB        * Transmision y recepcion activados
000023F0                                    72  
000023F0  11FC 0022 2397                    73                  MOVE.B    #%00100010,IMRCOPY    * Copiar IMR en nuestra propia variable
000023F6  13F8 2397 00EFFC0B                74                  MOVE.B    IMRCOPY,IMR
000023FE                                    75  
000023FE  13FC 0040 00EFFC19                76                  MOVE.B    #$40,IVR              * Vector de interrupcion = 64
00002406  21FC 00002628 0100                77                  MOVE.L    #RTI,$100             * Decimal: 4*64 = 256 -> Hexa: 100
0000240E                                    78  
0000240E                                    79  
0000240E                                    80                  * Mis propios inits
0000240E                                    81  
0000240E  207C 00000400                     82                  MOVE.L    #BUFF_V,A0            * Vector de buffers 
00002414                                    83  
00002414  20BC 00000410                     84                  MOVE.L    #BUFF_0,(A0)          * Buffer recepcion A
0000241A  217C 00000BF2 0004                85                  MOVE.L    #BUFF_1,4(A0)         * Buffer recepcion B
00002422  217C 000013D4 0008                86                  MOVE.L    #BUFF_2,8(A0)         * Buffer transmision A
0000242A  217C 00001BB6 000C                87                  MOVE.L    #BUFF_3,12(A0)        * Buffer transmision B
00002432                                    88  
00002432                                    89                  * Inicializo todos los punteros de los buffers
00002432  207C 00000410                     90                  MOVE.L    #BUFF_0,A0            * Recepcion A
00002438  20BC 00000420                     91                  MOVE.L    #BUFF_0+16,(A0)
0000243E  217C 00000420 0004                92                  MOVE.L    #BUFF_0+16,4(A0)
00002446  217C 00000420 0008                93                  MOVE.L    #BUFF_0+16,8(A0)
0000244E  217C 00000BF1 000C                94                  MOVE.L    #BUFF_0+SIZE+16,12(A0)
00002456                                    95  
00002456  207C 00000BF2                     96                  MOVE.L    #BUFF_1,A0            * Recepcion B
0000245C  20BC 00000C02                     97                  MOVE.L    #BUFF_1+16,(A0)
00002462  217C 00000C02 0004                98                  MOVE.L    #BUFF_1+16,4(A0)
0000246A  217C 00000C02 0008                99                  MOVE.L    #BUFF_1+16,8(A0)
00002472  217C 000013D3 000C               100                  MOVE.L    #BUFF_1+SIZE+16,12(A0)
0000247A                                   101  
0000247A  207C 000013D4                    102                  MOVE.L    #BUFF_2,A0            * Transmision A
00002480  20BC 000013E4                    103                  MOVE.L    #BUFF_2+16,(A0)
00002486  217C 000013E4 0004               104                  MOVE.L    #BUFF_2+16,4(A0)
0000248E  217C 000013E4 0008               105                  MOVE.L    #BUFF_2+16,8(A0)
00002496  217C 00001BB5 000C               106                  MOVE.L    #BUFF_2+SIZE+16,12(A0)
0000249E                                   107  
0000249E  207C 00001BB6                    108                  MOVE.L    #BUFF_3,A0            * Transmision B
000024A4  20BC 00001BC6                    109                  MOVE.L    #BUFF_3+16,(A0)
000024AA  217C 00001BC6 0004               110                  MOVE.L    #BUFF_3+16,4(A0)
000024B2  217C 00001BC6 0008               111                  MOVE.L    #BUFF_3+16,8(A0)
000024BA  217C 00002397 000C               112                  MOVE.L    #BUFF_3+SIZE+16,12(A0)
000024C2                                   113  
000024C2                                   114  
000024C2  4E75                             115                  RTS
000024C4                                   116  
000024C4                                   117      *██╗     ███████╗███████╗ ██████╗ █████╗ ██████╗ *
000024C4                                   118    ***██║     ██╔════╝██╔════╝██╔════╝██╔══██╗██╔══██╗***
000024C4                                   119  *****██║     █████╗  █████╗  ██║     ███████║██████╔╝*****
000024C4                                   120  *****██║     ██╔══╝  ██╔══╝  ██║     ██╔══██║██╔══██╗*****
000024C4                                   121    ***███████╗███████╗███████╗╚██████╗██║  ██║██║  ██║***
000024C4                                   122      *╚══════╝╚══════╝╚══════╝ ╚═════╝╚═╝  ╚═╝╚═╝  ╚═╝*
000024C4                                   123  
000024C4  48E7 00E0                        124      LEECAR:     MOVEM.L A0-A2,-(A7)
000024C8  C0BC 00000003                    125                  AND.L   #$3,D0
000024CE  E580                             126                  ASL.L   #2,D0           * Get buffer seleccionado
000024D0  307C 0400                        127                  MOVE    #BUFF_V,A0      * Get vector de buffers
000024D4  2070 0000                        128                  MOVE.L  (A0,D0),A0      * Get buffer concreto
000024D8  2250                             129                  MOVE.L  (A0),A1         * Get puntero de extraccion en A1
000024DA  2468 0004                        130                  MOVE.L  4(A0),A2        * Get puntero de insericon en A2
000024DE                                   131  
000024DE  B180                             132                  EOR.L   D0,D0           * D0 = 0
000024E0  B5C9                             133                  CMP.L   A1,A2           * Si extraccion e insercion son iguales -> empty buffer
000024E2  6700 001C                        134                  BEQ     EMPTY
000024E6                                   135  
000024E6  1019                             136                  MOVE.B  (A1)+,D0        * Leo e incremento puntero
000024E8  B3E8 000C                        137                  CMP.L   12(A0),A1       * Si pos_final == p_extraccion -> final del buffer
000024EC  6700 0008                        138                  BEQ     E_RES
000024F0                                   139  
000024F0  2089                             140                  MOVE.L  A1,(A0)         * Actualizo puntero de extraccion
000024F2  6000 000E                        141                  BRA     LC_END
000024F6                                   142  
000024F6  2268 0008                        143      E_RES:      MOVE.L  8(A0),A1        * Extraccion reset
000024FA  2089                             144                  MOVE.L  A1,(A0)
000024FC  6000 0004                        145                  BRA     LC_END
00002500                                   146  
00002500  70FF                             147      EMPTY:      MOVE.L  #-1,D0          * Empty buffer
00002502                                   148  
00002502  4CDF 0700                        149      LC_END:     MOVEM.L (A7)+,A0-A2     * Fin leecar
00002506  4E75                             150                  RTS
00002508                                   151  
00002508                                   152      *███████╗███████╗ ██████╗ ██████╗ █████╗ ██████╗ *
00002508                                   153    ***██╔════╝██╔════╝██╔════╝██╔════╝██╔══██╗██╔══██╗***
00002508                                   154  *****█████╗  ███████╗██║     ██║     ███████║██████╔╝*****
00002508                                   155  *****██╔══╝  ╚════██║██║     ██║     ██╔══██║██╔══██╗*****
00002508                                   156    ***███████╗███████║╚██████╗╚██████╗██║  ██║██║  ██║***
00002508                                   157      *╚══════╝╚══════╝ ╚═════╝ ╚═════╝╚═╝  ╚═╝╚═╝  ╚═╝*
00002508                                   158  
00002508  48E7 00E0                        159      ESCCAR:     MOVEM.L A0-A2,-(A7)
0000250C  C0BC 00000003                    160                  AND.L   #$3,D0
00002512  E580                             161                  ASL.L   #2,D0           * Get buffer seleccionado
00002514  307C 0400                        162                  MOVE    #BUFF_V,A0      * Get vector de buffers
00002518  2070 0000                        163                  MOVE.L  (A0,D0),A0      * Get buffer concreto
0000251C  2250                             164                  MOVE.L  (A0),A1         * Get puntero de extraccion en A1
0000251E  2468 0004                        165                  MOVE.L  4(A0),A2        * Get puntero de insercion en A2
00002522                                   166  
00002522  14C1                             167                  MOVE.B  D1,(A2)+        * Insert caracter
00002524  B5E8 000C                        168                  CMP.L   12(A0),A2       * Si pos_final == p_insercion -> final del buffer
00002528  6600 0006                        169                  BNE     N_RES           * Si no esta en el final del buffer, continua en N_RES
0000252C                                   170  
0000252C  2468 0008                        171                  MOVE.L  8(A0),A2        * Reset del p_insercion
00002530                                   172  
00002530  B5C9                             173      N_RES:      CMP.L   A1,A2           * Si extraccion == insercion -> buffer full
00002532  6700 000C                        174                  BEQ     FULL
00002536                                   175                  * No esta lleno
00002536  214A 0004                        176                  MOVE.L  A2,4(A0)
0000253A  7000                             177                  MOVE.L  #0,D0
0000253C  6000 0004                        178                  BRA     EC_END
00002540                                   179  
00002540  70FF                             180      FULL:       MOVE.L  #-1,D0
00002542                                   181  
00002542  4CDF 0700                        182      EC_END:      MOVEM.L (A7)+,A0-A2
00002546  4E75                             183                  RTS
00002548                                   184  
00002548                                   185      *███████╗ ██████╗ █████╗ ███╗   ██╗*
00002548                                   186    ***██╔════╝██╔════╝██╔══██╗████╗  ██║***
00002548                                   187  *****███████╗██║     ███████║██╔██╗ ██║*****
00002548                                   188  *****╚════██║██║     ██╔══██║██║╚██╗██║*****
00002548                                   189    ***███████║╚██████╗██║  ██║██║ ╚████║***
00002548                                   190      *╚══════╝ ╚═════╝╚═╝  ╚═╝╚═╝  ╚═══╝*
00002548                                   191  
00002548  4E56 0000                        192      SCAN:       LINK    A6,#0           * Los parametros de entrada estan 8B detras del puntero de pila
0000254C  226E 0008                        193                  MOVE.L  8(A6),A1        * A1 -> primer param (direccion del buffer destino)
00002550                                   194  
00002550  B180                             195                  EOR.L   D0,D0
00002552  302E 000C                        196                  MOVE.W  12(A6),D0       * D0 -> segundo param (descriptor del dispositivo sobre el que se lee)
00002556                                   197  
00002556  B381                             198                  EOR.L   D1,D1
00002558  322E 000E                        199                  MOVE.W  14(A6),D1       * D1 -> tercer param (size, num max de caracteres a copiar)
0000255C                                   200  
0000255C  B582                             201                  EOR.L   D2,D2              * D2 -> retorno (contador de carcteres leidos)
0000255E                                   202  
0000255E                                   203                  ***Seccion de deteccion de errores***
0000255E  B27C 0000                        204                  CMP.W   #0,D1           * Si el size < 0 -> error (absurdo!)
00002562  6D00 0034                        205                  BLT     SC_ERR
00002566  B07C 0001                        206                  CMP.W   #1,D0           * Si el desc > 1 -> buffer desc incorrecto
0000256A  6E00 002C                        207                  BGT     SC_ERR
0000256E  B07C 0000                        208                  CMP.W   #0,D0           * Si el desc < 0 -> buffer desc incorrecto
00002572  6D00 0024                        209                  BLT     SC_ERR
00002576                                   210  
00002576  B27C 0000                        211      SC_BUF:     CMP.W   #0,D1
0000257A  6700 0022                        212                  BEQ     SC_OK           * Comprobamos si se han leido todos los caracteres
0000257E  302E 000C                        213                  MOVE.W  12(A6),D0        * Reseteamos el desc. del dispositivo sobre el que leer
00002582  6100 FF40                        214                  BSR     LEECAR
00002586  B0BC FFFFFFFF                    215                  CMP.L   #-1,D0          * Si empty buffer -> se va al final
0000258C  6700 0010                        216                  BEQ     SC_OK
00002590  12C0                             217                  MOVE.B  D0,(A1)+        * Copiamos el caracter devuelto por leecar en la pos del buffer pasada
00002592  5341                             218                  SUB.W   #1,D1           * Size --
00002594  5282                             219                  ADD.L   #1,D2           * Contador ++
00002596  60DE                             220                  BRA     SC_BUF
00002598                                   221  
00002598  70FF                             222      SC_ERR:     MOVE.L  #-1,D0
0000259A  6000 0004                        223                  BRA     SC_END
0000259E                                   224  
0000259E  2002                             225      SC_OK:      MOVE.L  D2,D0
000025A0                                   226  
000025A0  4E5E                             227      SC_END:     UNLK    A6
000025A2  4E75                             228                  RTS
000025A4                                   229  
000025A4                                   230      *██████╗ ██████╗ ██╗███╗   ██╗████████╗*
000025A4                                   231    ***██╔══██╗██╔══██╗██║████╗  ██║╚══██╔══╝***
000025A4                                   232  *****██████╔╝██████╔╝██║██╔██╗ ██║   ██║   *****
000025A4                                   233  *****██╔═══╝ ██╔══██╗██║██║╚██╗██║   ██║   *****
000025A4                                   234    ***██║     ██║  ██║██║██║ ╚████║   ██║   ***
000025A4                                   235      *╚═╝     ╚═╝  ╚═╝╚═╝╚═╝  ╚═══╝   ╚═╝   *
000025A4                                   236  
000025A4  4E56 0000                        237      PRINT:      LINK  A6,#0             * Los parametros de entrada estan 8B detras del puntero de pila
000025A8  226E 0008                        238                  MOVE.L  8(A6),A1        * A1 -> primer param (direccion del buffer origen)
000025AC                                   239  
000025AC  B180                             240                  EOR.L   D0,D0
000025AE  302E 000C                        241                  MOVE.W  12(A6),D0       * D0 -> segundo param (descriptor del dispositivo sobre el que se lee)
000025B2                                   242                  * No se debe usar D1 ya que es un parametro de ESCCAR
000025B2  B582                             243                  EOR.L   D2,D2 * Puede que no haga falta este
000025B4  342E 000E                        244                  MOVE.W  14(A6),D2       * D2 -> tercer param (size, num max de caracteres a copiar)
000025B8                                   245  
000025B8  B783                             246                  EOR.L   D3,D3           * D3 -> retorno (contador de carcteres escritos)
000025BA                                   247  
000025BA                                   248                  ***Seccion de deteccion de errores***
000025BA  B47C 0000                        249                  CMP.W   #0,D2           * Si el size < 0 -> error (absurdo!)
000025BE  6D00 0062                        250                  BLT     PR_ERR
000025C2  B07C 0001                        251                  CMP.W   #1,D0           * Si el desc > 1 -> buffer desc incorrecto
000025C6  6E00 005A                        252                  BGT     PR_ERR
000025CA  B07C 0000                        253                  CMP.W   #0,D0           * Si el desc < 0 -> buffer desc incorrecto
000025CE  6D00 0052                        254                  BLT     PR_ERR
000025D2                                   255  
000025D2                                   256  
000025D2  B47C 0000                        257      PR_BUF:     CMP.W   #0,D2
000025D6  6700 0020                        258                  BEQ     PR_MTX
000025DA  302E 000C                        259                  MOVE.W  12(A6),D0       * Reestablecemos el desc. del dispositivo sobre el que escribir
000025DE  5440                             260                  ADD.W   #2,D0           * Para obtener el descriptor del buffer interno 2 = trans A, 3 = trans B
000025E0  B381                             261                  EOR.L   D1,D1 * Puede que esta linea sobre
000025E2  1219                             262                  MOVE.B  (A1)+,D1
000025E4  6100 FF22                        263                  BSR     ESCCAR          * Params: D0 -> desc (2+X para X = 0 e 1), D1 -> buff pointer
000025E8  B0BC FFFFFFFF                    264                  CMP.L   #-1,D0          * Si empty buffer -> se va al final
000025EE  6700 0008                        265                  BEQ     PR_MTX
000025F2  5342                             266                  SUB.W   #1,D2           * Size --
000025F4  5283                             267                  ADD.L   #1,D3           * Contador ++
000025F6  60DA                             268                  BRA     PR_BUF
000025F8                                   269  
000025F8  B6BC 00000000                    270      PR_MTX:     CMP.L   #0,D3
000025FE  6700 001C                        271                  BEQ     PR_OK           * Si no se escribe nada, no es necesario hacer gestion mutex
00002602  40C4                             272                  MOVE.W  SR,D4           * Salvamos SR (status register)
00002604                                   273                  * Puede crearse una variable global con valor $2700
00002604  46FC 2700                        274                  MOVE.W  #$2700,SR       *  Inhibir interrupciones
00002608                                   275                  * Para dejar en T Ready la linea A, necesitamos activar el bit 0
00002608                                   276                  * Para dejar en T Ready la linea B, necesitamos activar el bit 4
00002608                                   277                  * Si multiplicamos 4 por el descriptor de entrada (0 e 1) tenemos el bit que deseamos de IMR
00002608  342E 000C                        278                  MOVE.W  12(A6),D2
0000260C  C4FC 0004                        279                  MULU    #4,D2
00002610  05F9 00EFFC0B                    280                  BSET    D2,IMR
00002616  05F8 2397                        281                  BSET    D2,IMRCOPY           
0000261A  46C4                             282                  MOVE.W  D4,SR           * Restauramos SR (status register)
0000261C                                   283  
0000261C  2003                             284      PR_OK:      MOVE.L  D3,D0           * D3 (ret -> num car escritos) MV a D0
0000261E  6000 0004                        285                  BRA     PR_END
00002622                                   286  
00002622  70FF                             287      PR_ERR:     MOVE.L  #-1,D0
00002624                                   288  
00002624  4E5E                             289      PR_END:     UNLK    A6
00002626  4E75                             290                  RTS
00002628                                   291                
00002628                                   292  
00002628                                   293  
00002628  4E73                             294      RTI:        RTE
0000262A                                   295  
0000262A                                   296  
0000262A                                   297  
0000262A                                   298  
0000262A                                   299  PPAL: * Manejadores de excepciones
0000262A  21FC 000027C8 0008               300      MOVE.L  #BUS_ERROR,8     * Bus error handler
00002632  21FC 000027CC 000C               301      MOVE.L  #ADDRESS_ER,12   * Address error handler
0000263A  21FC 000027D0 0010               302      MOVE.L  #ILLEGAL_IN,16   * Illegal instruction handler
00002642  21FC 000027D4 0020               303      MOVE.L  #PRIV_VIOLT,32   * Privilege Violation handler
0000264A                                   304  
0000264A  6100 FD4C                        305      BSR     INIT
0000264E                                   306  
0000264E                                   307  ***************************************
0000264E                                   308  *██╗  ██╗██╗████████╗ ██████╗      ██╗*
0000264E                                   309  *██║  ██║██║╚══██╔══╝██╔═══██╗    ███║*
0000264E                                   310  *███████║██║   ██║   ██║   ██║    ╚██║*
0000264E                                   311  *██╔══██║██║   ██║   ██║   ██║     ██║*
0000264E                                   312  *██║  ██║██║   ██║   ╚██████╔╝     ██║*
0000264E                                   313  *╚═╝  ╚═╝╚═╝   ╚═╝    ╚═════╝      ╚═╝*
0000264E                                   314  ***************************************
0000264E                                   315                                       
0000264E                                   316  
0000264E                                   317  *** Prueba 2: Llamada a ESCCAR introduciendo un caracter en el buffer de recepción de la línea A (0)
0000264E                                   318  ***
0000264E                                   319  *************************************************************************************************************************
0000264E                                   320  **
0000264E                                   321  *pr02es_int:
0000264E                                   322  *    MOVE.L #0,D0
0000264E                                   323  *    MOVE.L #1,D1
0000264E                                   324  *    BSR ESCCAR      * D0 tiene que ser 0
0000264E                                   325      *BRA COMPCOR
0000264E                                   326  *************************************************************************************************************************
0000264E                                   327  **
0000264E                                   328  *** Prueba 3: Se escriben 10 caracteres en el buffer de recepción de la linea B(1) (10 llamadas a ESCCAR).
0000264E                                   329  ***
0000264E                                   330  *************************************************************************************************************************
0000264E                                   331  **
0000264E                                   332  *pr03es_int:
0000264E                                   333  *    MOVE.L #10,D3
0000264E                                   334  *    MOVE.L #1,D7
0000264E                                   335  *    BSR BUCESN1S
0000264E                                   336      *BRA COMPCOR    * D0 tiene que ser 0
0000264E                                   337  *************************************************************************************************************************
0000264E                                   338  **
0000264E                                   339  *** Prueba 4: Se escriben 300 caracteresen el buffer de transmisión de la linea A (2) (300 llamadas a ESCCAR).
0000264E                                   340  ***
0000264E                                   341  *************************************************************************************************************************
0000264E                                   342  **
0000264E                                   343  *pr04es_int:
0000264E                                   344  *    MOVE.L #2,D7
0000264E                                   345  *    MOVE.L #300,D3
0000264E                                   346  *    BSR BUCESNFF
0000264E                                   347      *BRA COMPCOR    * D0 tiene que ser 0
0000264E                                   348  
0000264E                                   349  *************************************************************************************************************************
0000264E                                   350  **
0000264E                                   351  *** Prueba 5: Se escriben 2000 caracteresen el buffer de transmisión de la linea B (3) (2000 llamadas a ESCCAR).
0000264E                                   352  ***
0000264E                                   353  *************************************************************************************************************************
0000264E                                   354  **
0000264E                                   355  *pr05es_int:
0000264E                                   356  *    MOVE.L #2000,D3
0000264E                                   357  *    MOVE.L #3,D7
0000264E                                   358  *    BSR BUCESNFF
0000264E                                   359      *BRA COMPCOR    * D0 tiene que ser 0
0000264E                                   360  *************************************************************************************************************************
0000264E                                   361  **
0000264E                                   362  *** Prueba 6: Se escriben más de 2000 caracteresen el buffer de transmisión de la linea B (3) (2001 llamadas a ESCCAR). ***
0000264E                                   363  *************************************************************************************************************************
0000264E                                   364  **
0000264E                                   365  *pr06es_int:
0000264E                                   366  *    MOVE.L #2000,D3
0000264E                                   367  *    MOVE.L #3,D7
0000264E                                   368  *    BSR BUCESNFF
0000264E                                   369  *    MOVE.L #3,D0
0000264E                                   370  *    MOVE.L #11,D1 * caracter 2001
0000264E                                   371  *    BSR ESCCAR
0000264E                                   372  *    *BRA COMPF      * D0 tiene que ser -1
0000264E                                   373  *************************************************************************************************************************
0000264E                                   374  **
0000264E                                   375  *** Prueba 7: Se prueba a leer un caracter de un buffer vacío (LEECAR buffer recepcion línea A)
0000264E                                   376  *****
0000264E                                   377  *************************************************************************************************************************
0000264E                                   378  **
0000264E                                   379  *pr07es_int:
0000264E                                   380  *    MOVE.L #0,D0
0000264E                                   381  *    BSR LEECAR
0000264E                                   382      *BRA COMPF      * D0 tiene que ser -1 
0000264E                                   383  *************************************************************************************************************************
0000264E                                   384  **
0000264E                                   385  
0000264E                                   386  
0000264E                                   387  *** Prueba 8: Se prueba a leer un caracter con 200 escritos en el buffer (LEECAR buffer recepcion línea A(0))
0000264E                                   388  ***
0000264E                                   389  *************************************************************************************************************************
0000264E                                   390  **
0000264E                                   391  *pr08es_int:
0000264E                                   392  *    MOVE.L #200,D3
0000264E                                   393  *    MOVE.L #0,D7
0000264E                                   394  *    BSR BUCESNFF
0000264E                                   395  *    MOVE.L #0,D0
0000264E                                   396  *    BSR LEECAR
0000264E                                   397  *    CMP.L #0,D0
0000264E                                   398  *    BEQ BIEN
0000264E                                   399  *    MOVE.L #-1,D5
0000264E                                   400  *    BRA FINC
0000264E                                   401  *************************************************************************************************************************
0000264E                                   402  **
0000264E                                   403  *** Prueba 9: Se prueba a leer 10 caracteres con 300 escritos en el buffer (LEECAR buffer recepcion línea B(1))
0000264E                                   404  ***
0000264E                                   405  *************************************************************************************************************************
0000264E                                   406  **
0000264E                                   407  *pr09es_int:
0000264E                                   408  *    MOVE.L #200,D3
0000264E                                   409  *    MOVE.L #1,D7
0000264E                                   410  *    BSR BUCESNFF
0000264E                                   411  *    MOVE.L #1,D7
0000264E                                   412  *    MOVE.L #10,D3
0000264E                                   413  *    BSR BUCLEEN
0000264E                                   414  *    CMP.L #$9,D0
0000264E                                   415  *    BEQ BIEN
0000264E                                   416  *    MOVE.L #-1,D5
0000264E                                   417  *    BRA FINC
0000264E                                   418  
0000264E                                   419  *************************************************************************************************************************
0000264E                                   420  **
0000264E                                   421  *** Prueba 10: Se prueba a leer 300 caracteres con 300 escritos en el buffer (LEECAR buffer transmisión línea A(2)) ***
0000264E                                   422  *************************************************************************************************************************
0000264E                                   423  **
0000264E                                   424  *pr10es_int:
0000264E                                   425  *    MOVE.L #300,D3
0000264E                                   426  *    MOVE.L #2,D7
0000264E                                   427  *    BSR BUCESNFF
0000264E                                   428  *    MOVE.L #2,D7
0000264E                                   429  *    MOVE.L #300,D3
0000264E                                   430  *    BSR BUCLEEN
0000264E                                   431  *    CMP.L #$2B,D0
0000264E                                   432  *    BEQ BIEN
0000264E                                   433  *    MOVE.L #-1,D5
0000264E                                   434  *    BRA FINC
0000264E                                   435  
0000264E                                   436  
0000264E                                   437  *************************************************************************************************************************
0000264E                                   438  **
0000264E                                   439  *** Prueba 11: Se realiza la inserción de 2000 caracteres en el buffer interno de transmisión de la linea B(3) llamando ***
0000264E                                   440  *** sucesivamente a ESCCAR. A continuación se leen 2000 caracteres de dicho buffer llamando a LEECAR
0000264E                                   441  ***
0000264E                                   442  *************************************************************************************************************************
0000264E                                   443  **
0000264E                                   444  *pr11es_int:
0000264E                                   445  *    MOVE.L #2000,D3
0000264E                                   446  *    MOVE.L #3,D7
0000264E                                   447  *    BSR BUCESNFF
0000264E                                   448  *    MOVE.L #3,D7
0000264E                                   449  *    MOVE.L #2000,D3
0000264E                                   450  *    BSR BUCLEEN
0000264E                                   451  *    CMP.L #$CF,D0
0000264E                                   452  *    BEQ BIEN
0000264E                                   453  *    MOVE.L #-1,D5
0000264E                                   454  *    BRA FINC
0000264E                                   455  
0000264E                                   456  *************************************************************************************************************************
0000264E                                   457  **
0000264E                                   458  *************************************************************************************************************************
0000264E                                   459  **
0000264E                                   460  *** Prueba 12: Se realiza la inserción de 1800 caracteres en el buffer interno de recepcion de la linea A(0) llamando ***
0000264E                                   461  *** sucesivamente a ESCCAR. A continuación se leen 100 caracteres de dicho buffer llamando a LEECAR y se vuelven a
0000264E                                   462  ***
0000264E                                   463  *** insertar 300 caracteres.
0000264E                                   464  ***
0000264E                                   465  *************************************************************************************************************************
0000264E                                   466  **
0000264E                                   467  *pr12es_int:
0000264E                                   468  *    MOVE.L #1800,D3
0000264E                                   469  *    MOVE.L #0,D7
0000264E                                   470  *    BSR BUCESNFF
0000264E                                   471  *    MOVE.L #0,D7
0000264E                                   472  *    MOVE.L #100,D3
0000264E                                   473  *    BSR BUCLEEN
0000264E                                   474  *    MOVE.L #300,D3
0000264E                                   475  *    MOVE.L #0,D7
0000264E                                   476  *    BSR BUCESNFF
0000264E                                   477      * BRA COMPCOR       *D0 tiene que ser 0
0000264E                                   478  
0000264E                                   479  
0000264E                                   480  *************************************************************************************************************************
0000264E                                   481  **
0000264E                                   482  *** Prueba 13: Se realiza la inserción de 2000 caracteres en el buffer interno de recepcion de la linea B(1) llamando ***
0000264E                                   483  *** sucesivamente a ESCCAR. A continuación se lee 1 caracter de dicho buffer llamando a LEECAR y se vuelven a insertar ***
0000264E                                   484  *** 2 caracteres.
0000264E                                   485  ***
0000264E                                   486  *************************************************************************************************************************
0000264E                                   487  **
0000264E                                   488  *pr13es_int:
0000264E                                   489  *    MOVE.L #2000,D3
0000264E                                   490  *    MOVE.L #1,D7
0000264E                                   491  *    BSR BUCESNFF
0000264E                                   492  *    MOVE.L #1,D0
0000264E                                   493  *    MOVE.L #1,D1
0000264E                                   494  *    BSR LEECAR
0000264E                                   495  *    MOVE.L #2,D3
0000264E                                   496  *    MOVE.L #1,D7
0000264E                                   497  *    BSR BUCESNFF
0000264E                                   498  *    BRA COMPF
0000264E                                   499  
0000264E                                   500  *************************************************************************************************************************
0000264E                                   501  **
0000264E                                   502  *** Prueba 14: Se realiza la inserción de 2000 caracteres en el buffer interno de transmisión de la linea A(2) llamando ***
0000264E                                   503  *** sucesivamente a ESCCAR. A continuación se lee 10 caracteres de dicho buffer llamando a LEECAR y se vuelven a
0000264E                                   504  ***
0000264E                                   505  *** insertar 10 caracteres y por último se vuelven a leer 2000.
0000264E                                   506  ***
0000264E                                   507  *************************************************************************************************************************
0000264E                                   508  **
0000264E                                   509  *pr14es_int:
0000264E                                   510  *    MOVE.L #2000,D3
0000264E                                   511  *    MOVE.L #2,D7
0000264E                                   512  *    BSR BUCESNFF
0000264E                                   513  *    MOVE.L #2,D7
0000264E                                   514  *    MOVE.L #10,D3
0000264E                                   515  *    BSR BUCLEEN
0000264E                                   516  *    MOVE.L #10,D3
0000264E                                   517  *    MOVE.L #2,D7
0000264E                                   518  *    BSR BUCESNFF
0000264E                                   519  *    MOVE.L #2,D7
0000264E                                   520  *    MOVE.L #2000,D3
0000264E                                   521  *    BSR BUCLEEN
0000264E                                   522  *    CMP.L #$9,D0
0000264E                                   523  *    BEQ BIEN
0000264E                                   524  *    MOVE.L #-1,D5
0000264E                                   525  *    BRA FINC
0000264E                                   526  
0000264E                                   527  *************************************************************************************************************************
0000264E                                   528  **
0000264E                                   529  *** Prueba 15: Se realiza la inserción de 2000 caracteres en el buffer interno de transmisión de la linea B(3) llamando ***
0000264E                                   530  *** sucesivamente a ESCCAR. A continuación se leen 1000 caracteres de dicho buffer llamando a LEECAR y se vuelven a ***
0000264E                                   531  *** insertar 1000 caracteres y por último se vuelven a leer 1500.
0000264E                                   532  ***
0000264E                                   533  *************************************************************************************************************************
0000264E                                   534  **
0000264E                                   535  *pr15es_int:
0000264E                                   536  *    MOVE.L #2000,D3
0000264E                                   537  *    MOVE.L #3,D7
0000264E                                   538  *    BSR BUCESNFF
0000264E                                   539  *    MOVE.L #3,D7
0000264E                                   540  *    MOVE.L #1000,D3
0000264E                                   541  *    BSR BUCLEEN
0000264E                                   542  *    MOVE.L #1000,D3
0000264E                                   543  *    MOVE.L #3,D7
0000264E                                   544  *    BSR BUCESNFF
0000264E                                   545  *    MOVE.L #3,D7
0000264E                                   546  *    MOVE.L #1500,D3
0000264E                                   547  *    BSR BUCLEEN
0000264E                                   548  *    CMP.L #$F3,D0
0000264E                                   549  *    BEQ BIEN
0000264E                                   550  *    MOVE.L #-1,D5
0000264E                                   551  *    BRA FINC
0000264E                                   552  
0000264E                                   553  
0000264E                                   554  ************************************
0000264E                                   555  *███████╗ ██████╗ █████╗ ███╗   ██╗*
0000264E                                   556  *██╔════╝██╔════╝██╔══██╗████╗  ██║*
0000264E                                   557  *███████╗██║     ███████║██╔██╗ ██║*
0000264E                                   558  *╚════██║██║     ██╔══██║██║╚██╗██║*
0000264E                                   559  *███████║╚██████╗██║  ██║██║ ╚████║*
0000264E                                   560  *╚══════╝ ╚═════╝╚═╝  ╚═╝╚═╝  ╚═══╝*
0000264E                                   561  ************************************
0000264E                                   562  
0000264E                                   563  *** Prueba scan 1: inserta 100 caracteres en el buffer interno de recepcion de la linea A (0)
0000264E                                   564  *** se leen 100. Resultado esperado -> D0 = 64 (100 en hex)
0000264E                                   565  
0000264E                                   566  p_scan_1:
0000264E  263C 00000100                    567      MOVE.L  #$100,D3
00002654  7E00                             568      MOVE.L  #0,D7
00002656  6100 00F0                        569      BSR     BUCESNFF
0000265A  3F3C 0100                        570      MOVE.W  #$100,-(A7)
0000265E  3F3C 0000                        571      MOVE.W  #0,-(A7)
00002662  2F3C 00005000                    572      MOVE.L  #$5000,-(A7)
00002668  6100 FEDE                        573      BSR     SCAN
0000266C  B0BC 00000100                    574      CMP.L   #$100,D0
00002672  6600 008C                        575      BNE     AMENTET
00002676                                   576  
00002676                                   577  *** Prueba scan 2: inserta 100 caracteres en el buffer interno de recepcion de la linea B (1)
00002676                                   578  *** se leen 25 caracteres 4 veces de tal manera que el buffer quede vacio. Resultado esperado:
00002676                                   579  *** D0 = 19 (25 en hex). Pos $50FF en memoria = pos $D01
00002676                                   580                                    
00002676                                   581  p_scan_2:
00002676  263C 00000094                    582              MOVE.L  #$94,D3         * 25 * 4 es 94 en hex
0000267C  7E01                             583              MOVE.L  #1,D7
0000267E  6100 00C8                        584              BSR    BUCESNFF
00002682  7800                             585              MOVE.L  #0,D4
00002684  B8BC 00000004                    586  p_s_2_b:    CMP.L   #4,D4
0000268A  6700 0022                        587              BEQ     p_s_2_e
0000268E  3F3C 0025                        588              MOVE.W  #$25,-(A7)
00002692  3F3C 0001                        589              MOVE.W  #1,-(A7)
00002696  2F3C 00005000                    590              MOVE.L  #$5000,-(A7)
0000269C  6100 FEAA                        591              BSR     SCAN
000026A0  B0BC 00000025                    592              CMP.L   #$25,D0
000026A6  6600 0058                        593              BNE     AMENTET
000026AA  5284                             594              ADD.L   #1,D4
000026AC  60D6                             595              BRA     p_s_2_b
000026AE  2803                             596  p_s_2_e:    MOVE.L  D3,D4
000026B0                                   597  
000026B0                                   598  
000026B0                                   599  *** Prueba scan 3: inserta 10 caracteres y se intenta leer 20 en el buffer interno de recepcion A (0)
000026B0                                   600  *** El resultado esperado es 10 en D0 y guardar desde 00 hasta 09 en la posicion $5000 de memoria
000026B0  760A                             601  p_scan_3:   MOVE.L  #10,D3
000026B2  7E00                             602              MOVE.L  #0,D7
000026B4  6100 0092                        603              BSR     BUCESNFF
000026B8  3F3C 0014                        604              MOVE.W  #20,-(A7)
000026BC  3F3C 0000                        605              MOVE.W  #0,-(A7)
000026C0  2F3C 00005000                    606              MOVE.L  #$5000,-(A7)
000026C6  6100 FE80                        607              BSR     SCAN
000026CA  B0BC 0000000A                    608              CMP.L   #10,D0
000026D0  6600 002E                        609              BNE     AMENTET
000026D4  2803                             610              MOVE.L  D3,D4
000026D6                                   611  
000026D6                                   612      *██████╗ ██████╗ ██╗███╗   ██╗████████╗*
000026D6                                   613    ***██╔══██╗██╔══██╗██║████╗  ██║╚══██╔══╝***
000026D6                                   614  *****██████╔╝██████╔╝██║██╔██╗ ██║   ██║   *****
000026D6                                   615  *****██╔═══╝ ██╔══██╗██║██║╚██╗██║   ██║   *****
000026D6                                   616    ***██║     ██║  ██║██║██║ ╚████║   ██║   ***
000026D6                                   617      *╚═╝     ╚═╝  ╚═╝╚═╝╚═╝  ╚═══╝   ╚═╝   *
000026D6                                   618  
000026D6                                   619  p_prt_1:
000026D6  263C 00000100                    620              MOVE.L  #$100,D3
000026DC  7E03                             621              MOVE.L  #3,D7
000026DE  6100 0068                        622              BSR     BUCESNFF
000026E2  3F3C 0100                        623              MOVE.W  #$100,-(A7)
000026E6  3F3C 0001                        624              MOVE.W  #1,-(A7)
000026EA  2F3C 00005000                    625              MOVE.L  #$5000,-(A7)
000026F0  6100 FEB2                        626              BSR     PRINT
000026F4  B0BC 00000100                    627              CMP.L   #$100,D0
000026FA  6600 0004                        628              BNE     AMENTET
000026FE  2803                             629              MOVE.L  D3,D4
00002700                                   630              
00002700                                   631  
00002700                                   632  *********************************************************
00002700                                   633  * █████╗ ██╗   ██╗██╗  ██╗██╗██╗     ██╗ █████╗ ██████╗ *
00002700                                   634  *██╔══██╗██║   ██║╚██╗██╔╝██║██║     ██║██╔══██╗██╔══██╗*
00002700                                   635  *███████║██║   ██║ ╚███╔╝ ██║██║     ██║███████║██████╔╝*
00002700                                   636  *██╔══██║██║   ██║ ██╔██╗ ██║██║     ██║██╔══██║██╔══██╗*
00002700                                   637  *██║  ██║╚██████╔╝██╔╝ ██╗██║███████╗██║██║  ██║██║  ██║*
00002700                                   638  *╚═╝  ╚═╝ ╚═════╝ ╚═╝  ╚═╝╚═╝╚══════╝╚═╝╚═╝  ╚═╝╚═╝  ╚═╝*
00002700                                   639  *********************************************************
00002700                                   640  
00002700                                   641  * La rutina AMENTET hace referencia a la diosa egipcia homonima la cual era la patrona de las puertas
00002700                                   642  * del inframundo en el que esperaba a los difuntos que no superaban las pruebas en su camino al paraiso.
00002700                                   643  * En este caso, las subrutinas que no superen las pruebas, las esperara AMENTET que para indicar su fallo
00002700                                   644  * y mandarlas corregir.
00002700                                   645  AMENTET:
00002700  70FF                             646              MOVE.L  #-1,D0
00002702  72FF                             647              MOVE.L  #-1,D1
00002704  74FF                             648              MOVE.L  #-1,D2
00002706  76FF                             649              MOVE.L  #-1,D3
00002708  78FF                             650              MOVE.L  #-1,D4
0000270A  7AFF                             651              MOVE.L  #-1,D5
0000270C  7CFF                             652              MOVE.L  #-1,D6
0000270E  7EFF                             653              MOVE.L  #-1,D7
00002710  207C FFFFFFFF                    654              MOVE.L  #-1,A0
00002716  227C FFFFFFFF                    655              MOVE.L  #-1,A1
0000271C  247C FFFFFFFF                    656              MOVE.L  #-1,A2
00002722  267C FFFFFFFF                    657              MOVE.L  #-1,A3
00002728  287C FFFFFFFF                    658              MOVE.L  #-1,A4
0000272E  2A7C FFFFFFFF                    659              MOVE.L  #-1,A5
00002734  4848                             660              BREAK
00002736                                   661                                                         
00002736                                   662  *************************************************************************************************************************
00002736                                   663  *****
00002736                                   664  *** Funcionamiento de los bucles:
00002736                                   665  ***
00002736                                   666  *** -D7 es el buffer que queremos usar: D7={0,1,2,3}, por lo tanto hay que hacer un MOVE.L #X,D7, donde x es el buffer ***
00002736                                   667  *** -La variable n es D3, por lo tanto si queremos meter 200 numeros por ejemplo hay que hacer MOVE.L #200,D3
00002736                                   668  ***
00002736                                   669  *************************************************************************************************************************
00002736                                   670  *****
00002736                                   671  *************************************************************************************************************************
00002736                                   672  *****
00002736                                   673  *** Este bucle llama a ESCCAR n veces rellenando el buffer todo con unos
00002736                                   674  ***
00002736                                   675  BUCESN1S:
00002736  B944                             676      EOR D4,D4 *Contador de elementos
00002738                                   677      buc1:
00002738  7201                             678          MOVE.L #1,D1 *Variable 1 que queremos meter en el buffer n veces
0000273A  2007                             679          MOVE.L D7,D0
0000273C  6100 FDCA                        680          BSR ESCCAR
00002740  5284                             681          ADD.L #1,D4
00002742  B883                             682          CMP.L D3,D4
00002744  66F2                             683          BNE buc1
00002746  4E75                             684      RTS
00002748                                   685  
00002748                                   686  
00002748                                   687  
00002748                                   688  *************************************************************************************************************************
00002748                                   689  *****
00002748                                   690  *************************************************************************************************************************
00002748                                   691  *****
00002748                                   692  *** Este bucle llama a ESCCAR n veces rellenando el buffer todo con números desde 0 al FF en hexadecimal
00002748                                   693  ***
00002748                                   694  BUCESNFF:
00002748  B944                             695      EOR D4,D4
0000274A  B341                             696      EOR D1,D1
0000274C                                   697      buc2:
0000274C  2007                             698          MOVE.L D7,D0
0000274E  6100 FDB8                        699          BSR ESCCAR
00002752  5284                             700          ADD.L #1,D4
00002754  5281                             701          ADD.L #1,D1
00002756  B2BC 00000100                    702          CMP.L #$100,D1
0000275C  6700 0006                        703          BEQ D1ZERO
00002760  6000 0004                        704          BRA FINB1
00002764  B341                             705          D1ZERO: EOR D1,D1
00002766  B883                             706          FINB1: CMP.L D3,D4
00002768  66E2                             707          BNE buc2
0000276A  4E75                             708      RTS
0000276C                                   709  
0000276C                                   710  
0000276C                                   711  
0000276C                                   712  
0000276C                                   713  *************************************************************************************************************************
0000276C                                   714  *****
0000276C                                   715  *************************************************************************************************************************
0000276C                                   716  *****
0000276C                                   717  *** Este bucle llama a ESCCAR n veces rellenando el buffer todo con números desde 0 al 9 en hexadecimal
0000276C                                   718  ***
0000276C                                   719  BUCESN09:
0000276C  B944                             720      EOR D4,D4
0000276E  B341                             721      EOR D1,D1
00002770                                   722      buc4:
00002770  2007                             723          MOVE.L D7,D0
00002772  6100 FD94                        724          BSR ESCCAR
00002776  5284                             725          ADD.L #1,D4
00002778  5281                             726          ADD.L #1,D1
0000277A  B2BC 0000000A                    727          CMP.L #10,D1
00002780  6700 0006                        728          BEQ D1ZERO2
00002784  6000 0004                        729          BRA FINB12
00002788  B341                             730          D1ZERO2: EOR D1,D1
0000278A  B883                             731          FINB12: CMP.L D3,D4
0000278C  66E2                             732          BNE buc4
0000278E  4E75                             733      RTS
00002790                                   734  
00002790                                   735  
00002790                                   736  *************************************************************************************************************************
00002790                                   737  *** Este bucle llama a LEECAR n veces
00002790                                   738  ***
00002790                                   739  BUCLEEN:
00002790  B944                             740      EOR D4,D4
00002792                                   741      buc3:
00002792  2007                             742          MOVE.L D7,D0
00002794  6100 FD2E                        743          BSR LEECAR
00002798  5284                             744          ADD.L #1,D4
0000279A  B883                             745          CMP.L D3,D4
0000279C  66F4                             746          BNE buc3
0000279E  4E75                             747      RTS
000027A0                                   748  
000027A0  B0BC 00000000                    749  COMPCOR: CMP.L #0,D0
000027A6  6700 0012                        750      BEQ BIEN
000027AA  6000 0018                        751      BRA MAL
000027AE                                   752  
000027AE  B07C FFFF                        753  COMPF: CMP #-1,D0
000027B2  6700 0006                        754      BEQ BIEN
000027B6  6000 000C                        755      BRA MAL
000027BA                                   756  
000027BA  2A3C ABCDEF10                    757  BIEN: MOVE.L #$abcdef10,D5
000027C0  6000 0004                        758      BRA FINC
000027C4                                   759  
000027C4  7AFF                             760  MAL: MOVE.L #-1,D5
000027C6                                   761  
000027C6  4848                             762  FINC: BREAK
000027C8                                   763  
000027C8                                   764  
000027C8                                   765  ** Given by guide
000027C8                                   766  **
000027C8                                   767  **INICIO: * Manejadores de excepciones
000027C8                                   768  **    MOVE.L  #BUS_ERROR,8     * Bus error handler
000027C8                                   769  **    MOVE.L  #ADDRESS_ER,12   * Address error handler
000027C8                                   770  **    MOVE.L  #ILLEGAL_IN,16   * Illegal instruction handler
000027C8                                   771  **    MOVE.L  #PRIV_VIOLT,32   * Privilege Violation handler
000027C8                                   772  **
000027C8                                   773  **    BSR     INIT
000027C8                                   774  **    MOVE.W  #$2000,SR        * Permite interrupciones
000027C8                                   775  **
000027C8                                   776  **BUCPR:
000027C8                                   777  **    MOVE.W  #0,CONTC         * Inicializa contador de caracteres
000027C8                                   778  **    MOVE.W  #NLIN,CONTL      * Inicializa contador de lineas
000027C8                                   779  **    MOVE.L  #BUFFER,DIRLEC   * Direccion de lectura = comienzo del buffer
000027C8                                   780  **
000027C8                                   781  **OTRAL:
000027C8                                   782  **    MOVE.W  #TAML,-(A7)      * Tamano maximo de la linea
000027C8                                   783  **    MOVE.W  #DESB,-(A7)      * Puerto A
000027C8                                   784  **    MOVE.L  DIRLEC,-(A7)     * Direccion de lectura
000027C8                                   785  **
000027C8                                   786  **ESPL:
000027C8                                   787  **    BSR     SCAN
000027C8                                   788  **    CMP.L   #0,D0
000027C8                                   789  **    BEQ     ESPL             * Si no se ha leido la linea, se intenta de nuevo
000027C8                                   790  **    ADD.L   #8,A7            * Reestablece la pila
000027C8                                   791  **    ADD.L   D0,DIRLEC        * Calcula la nueva direccion de lectura
000027C8                                   792  **    ADD.W   D0,CONTC         * Actualiza el contador de caracteres
000027C8                                   793  **
000027C8                                   794  **    SUB.W   #1,CONTL         * Actualiza el numero de lineas leidas.
000027C8                                   795  **    BNE     OTRAL            * Si no se han leido todas, se vuelve a leer
000027C8                                   796  **
000027C8                                   797  **    MOVE.L  #BUFFER,DIRLEC   * DIreccion de lectura = comienzo del buffer
000027C8                                   798  **
000027C8                                   799  **OTRAE:
000027C8                                   800  **    MOVE.W  #TAMB,TAME       * Tamano de escritura = tamano de bloque
000027C8                                   801  **
000027C8                                   802  **ESPE:
000027C8                                   803  **    MOVE.W  TAME,-(A7)       * Tamano de escritura
000027C8                                   804  **        MOVE.W  #DESA,-(A7)      * Puerto B
000027C8                                   805  **        MOVE.L  DIRLEC,-(A7)     * Direccion de lectura
000027C8                                   806  **    * BREAK
000027C8                                   807  **    BSR     PRINT
000027C8                                   808  **    ADD.L   #8,A7            * Reestablece la pila
000027C8                                   809  **    ADD.L   D0,DIRLEC        * Calcula la nueva direccion del buffer
000027C8                                   810  **    SUB.W   D0,CONTC         * Actualiza el contador de caracteres
000027C8                                   811  **    BEQ     SALIR            * Si no quedan caracteres, se acaba
000027C8                                   812  **    SUB.W   D0,TAME          * Actualiza el tamano de escritura
000027C8                                   813  **    BNE     ESPE             * Si no se ha escrito todo el bloque, se insiste
000027C8                                   814  **    CMP.W   #TAMB,CONTC      * Si el numero de caracteres restantes es menor que el establecido, se transmite ese numero
000027C8                                   815  **    BHI     OTRAE            * Siguiente bloque
000027C8                                   816  **    MOVE.W  CONTC,TAME
000027C8                                   817  **    BRA     ESPE             * Siguiente bloque
000027C8                                   818  **
000027C8                                   819  **SALIR:
000027C8                                   820  **    BRA     BUCPR
000027C8                                   821  **
000027C8                                   822  **FIN:
000027C8                                   823  **    BREAK
000027C8                                   824  **
000027C8                                   825  **BUS_ERROR:
000027C8                                   826  **    BREAK                    * Bus error handler
000027C8                                   827  **    NOP
000027C8                                   828  **
000027C8                                   829  **ADDRESS_ER:
000027C8                                   830  **    BREAK                    * Address error handler
000027C8                                   831  **    NOP
000027C8                                   832  **
000027C8                                   833  **ILLEGAL_IN:
000027C8                                   834  **    BREAK                    * Illegal instruction handler
000027C8                                   835  **    NOP
000027C8                                   836  **
000027C8                                   837  **PRIV_VIOLT:
000027C8                                   838  **    BREAK                    * Priviledge violation handler
000027C8                                   839  **    NOP
000027C8                                   840  **
000027C8                                   841  
000027C8                                   842  BUS_ERROR:
000027C8  4848                             843      BREAK                    * Bus error handler
000027CA  4E71                             844      NOP
000027CC                                   845  
000027CC                                   846  ADDRESS_ER:
000027CC  4848                             847      BREAK                    * Address error handler
000027CE  4E71                             848      NOP
000027D0                                   849  
000027D0                                   850  ILLEGAL_IN:
000027D0  4848                             851      BREAK                    * Illegal instruction handler
000027D2  4E71                             852      NOP
000027D4                                   853  
000027D4                                   854  PRIV_VIOLT:
000027D4  4848                             855      BREAK                    * Priviledge violation handler

No errors detected
No warnings generated
